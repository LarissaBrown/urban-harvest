{"ast":null,"code":"// Filename: formurlencoded.js\n// Timestamp: 2016.01.18-15:36:37 (last modified)\n// Author(s): Bumblehead (www.bumblehead.com), JBlashill (james@blashill.com)\n//\n// http://www.w3.org/TR/html5/forms.html#url-encoded-form-data\n// input: {one:1,two:2} return: '[one]=1&[two]=2'\nvar formurlencoded = module.exports = function (data, opts) {\n  opts = typeof opts === 'object' ? opts : {};\n\n  function encode(value) {\n    return String(value).replace(/[^ !'()~\\*]*/g, encodeURIComponent).replace(/ /g, '+').replace(/[!'()~\\*]/g, function (ch) {\n      return '%' + ch.charCodeAt().toString(16).slice(-2).toUpperCase();\n    });\n  }\n\n  function keys(obj) {\n    var keys = Object.keys(obj);\n    return opts.sorted ? keys.sort() : keys;\n  }\n\n  function filterjoin(arr) {\n    return arr.filter(function (e) {\n      return e;\n    }).join('&');\n  }\n\n  function objnest(name, obj) {\n    return filterjoin(keys(obj).map(function (key) {\n      return nest(name + '[' + key + ']', obj[key]);\n    }));\n  }\n\n  function arrnest(name, arr) {\n    return filterjoin(arr.map(function (elem) {\n      return nest(name + '[]', elem);\n    }));\n  }\n\n  function nest(name, value) {\n    var type = typeof value,\n        f = null;\n\n    if (value === f) {\n      f = opts.ignorenull ? f : encode(name) + '=' + f;\n    } else if (/string|number|boolean/.test(type)) {\n      f = encode(name) + '=' + encode(value);\n    } else if (Array.isArray(value)) {\n      f = arrnest(name, value);\n    } else if (type === 'object') {\n      f = objnest(name, value);\n    }\n\n    return f;\n  }\n\n  return filterjoin(keys(data).map(function (key) {\n    return nest(key, data[key]);\n  }));\n};","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/node_modules/form-urlencoded/form-urlencoded.js"],"names":["formurlencoded","module","exports","data","opts","encode","value","String","replace","encodeURIComponent","ch","charCodeAt","toString","slice","toUpperCase","keys","obj","Object","sorted","sort","filterjoin","arr","filter","e","join","objnest","name","map","key","nest","arrnest","elem","type","f","ignorenull","test","Array","isArray"],"mappings":"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","sourcesContent":["// Filename: formurlencoded.js\n// Timestamp: 2016.01.18-15:36:37 (last modified)\n// Author(s): Bumblehead (www.bumblehead.com), JBlashill (james@blashill.com)\n//\n// http://www.w3.org/TR/html5/forms.html#url-encoded-form-data\n// input: {one:1,two:2} return: '[one]=1&[two]=2'\n\nvar formurlencoded = module.exports = function (data, opts) {\n  opts = typeof opts === 'object' ? opts : {};\n\n  function encode (value) {\n    return String(value)\n      .replace(/[^ !'()~\\*]*/g, encodeURIComponent)\n      .replace(/ /g, '+')\n      .replace(/[!'()~\\*]/g, function (ch) {\n        return '%' + ch.charCodeAt().toString(16).slice(-2).toUpperCase();\n      });\n  }\n\n  function keys (obj) {\n    var keys = Object.keys(obj);\n\n    return opts.sorted ? keys.sort() : keys;\n  }\n\n  function filterjoin (arr) {\n    return arr.filter(function (e) { return e; }).join('&');\n  }\n\n  function objnest (name, obj) {\n    return filterjoin(keys(obj).map(function (key) {\n      return nest(name + '[' + key + ']', obj[key]);\n    }));\n  }\n\n  function arrnest (name, arr) {\n    return filterjoin(arr.map(function (elem) {\n      return nest(name + '[]', elem);\n    }));\n  }\n\n  function nest (name, value) {\n    var type = typeof value,\n        f = null;\n\n    if (value === f) {\n      f = opts.ignorenull ? f : encode(name) + '=' + f;\n    } else if (/string|number|boolean/.test(type)) {\n      f = encode(name) + '=' + encode(value);\n    } else if (Array.isArray(value)) {\n      f = arrnest(name, value);\n    } else if (type === 'object') {\n      f = objnest(name, value);\n    }\n\n    return f;\n  }\n\n  return filterjoin(keys(data).map(function (key) {\n    return nest(key, data[key]);\n  }));\n};\n"]},"metadata":{},"sourceType":"script"}