{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Harvest from './Harvest';\nimport { HarvestContext } from '../context/HarvestProvider';\nimport { v4 } from 'uuid';\nimport Grid from '@material-ui/core/Grid';\nimport Panel from \"./Panel/Panel\";\n\nfunction FarmerHarvestList(props) {\n  _s();\n\n  const {\n    harvests,\n    getAllHarvests\n  } = useContext(HarvestContext);\n  const [mouseDown, setMouseDown] = useState(false);\n  const {\n    myHarvestIsClicked\n  } = props;\n  const panelRef = useRef();\n\n  const handleDrag = (movementX, movementY) => {\n    const panel = panelRef.current;\n    if (!panel) return;\n    const {\n      x,\n      y\n    } = panel.getBoundingClientRect();\n    panel.style.left = `${x + movementX}px`;\n    panel.style.top = `${y + movementY}px`;\n  };\n\n  useEffect(() => {\n    const handleMouseUp = () => setMouseDown(false);\n\n    window.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      window.addEventListener('mouseup', handleMouseUp);\n    };\n  }, []);\n  useEffect(() => {\n    const handleMouseMove = e => handleDrag(e.movementX, e.movementY);\n\n    if (mouseDown) {\n      window.addEventListener('mousemove', handleMouseMove);\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [mouseDown, handleDrag]);\n\n  const handleMouseDown = () => setMouseDown(true);\n\n  useEffect(() => {\n    getAllHarvests();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Panel, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseDown: handleMouseDown,\n        className: \"panel_container\",\n        style: !myHarvestIsClicked ? {\n          visibility: \"visible\",\n          position: 'absolute'\n        } : {\n          visibility: \"hidden\",\n          position: 'absolute'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"panel_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"myHarvestText\",\n            children: \"My Harvests\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            className: \"myHarvestList\",\n            children: harvests.map(harvest => /*#__PURE__*/_jsxDEV(Harvest, {\n              title: harvest.title,\n              image: harvest.harvestImg,\n              label: harvest.body,\n              farmer: harvest.userHandle\n            }, v4(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 46\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(FarmerHarvestList, \"L2znZU8fcEavJ+KJ/m61E1koRkg=\");\n\n_c = FarmerHarvestList;\nexport default FarmerHarvestList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerHarvestList\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestList.js"],"names":["React","useContext","useEffect","useState","Harvest","HarvestContext","v4","Grid","Panel","FarmerHarvestList","props","harvests","getAllHarvests","mouseDown","setMouseDown","myHarvestIsClicked","panelRef","useRef","handleDrag","movementX","movementY","panel","current","x","y","getBoundingClientRect","style","left","top","handleMouseUp","window","addEventListener","handleMouseMove","e","removeEventListener","handleMouseDown","visibility","position","map","harvest","title","harvestImg","body","userHandle"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport Harvest from './Harvest'\nimport {HarvestContext} from '../context/HarvestProvider'\nimport {v4} from 'uuid'\nimport Grid from '@material-ui/core/Grid'\nimport Panel from \"./Panel/Panel\"\n\n\n\n\n\n\nfunction FarmerHarvestList(props) {\n\n    const { harvests, getAllHarvests} = useContext(HarvestContext)\n    const [ mouseDown, setMouseDown ] = useState(false)\n  \n    \n   \n    const {myHarvestIsClicked} = props\n    const panelRef = useRef()\n    const handleDrag = (movementX, movementY)=>{\n      const panel = panelRef.current\n      if(!panel) return\n      \n      const { x, y } = panel.getBoundingClientRect()\n\n      panel.style.left = `${x + movementX}px`\n      panel.style.top = `${y + movementY}px`\n  }\n   \n      useEffect(() => {\n        const handleMouseUp = () => setMouseDown(false)\n        window.addEventListener('mouseup', handleMouseUp)\n        return () => {\n        window.addEventListener('mouseup', handleMouseUp)\n        }\n      }, [])\n  \n      useEffect(() => {\n        const handleMouseMove = (e) => handleDrag(e.movementX, e.movementY)\n  \n        if(mouseDown) {\n          window.addEventListener('mousemove', handleMouseMove)\n        }\n        return () => {\n          window.removeEventListener('mousemove',  handleMouseMove)\n        }\n      }, [mouseDown, handleDrag])\n      const handleMouseDown = () => setMouseDown(true)\n  \n    useEffect(() => {\n\n        getAllHarvests()\n       \n\n    }, []\n    )\n \n\n    return (\n      <>\n        <Panel>\n          <div onMouseDown={handleMouseDown} className=\"panel_container\" \n           style={!myHarvestIsClicked\n            ? \n            {visibility: \"visible\", position: 'absolute'} \n            :\n            {visibility: \"hidden\", position: 'absolute'}}>\n            <Grid className=\"panel_container\">\n                 <h1 className=\"myHarvestText\">My Harvests</h1>\n                <Grid item xs={12} className=\"myHarvestList\">\n                    {harvests.map(harvest => <Harvest title={harvest.title} image={harvest.harvestImg} label={harvest.body} farmer={harvest.userHandle}\n                     key={v4()} />)}\n                </Grid>\n            </Grid>\n            </div>\n        </Panel>\n        </>\n\n    )\n}\n\nexport default FarmerHarvestList"]},"metadata":{},"sourceType":"module"}