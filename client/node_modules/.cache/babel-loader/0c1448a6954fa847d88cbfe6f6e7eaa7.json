{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport Harvest from './Harvest';\nimport { HarvestContext } from '../context/HarvestProvider';\nimport { v4 } from 'uuid';\nimport Panel from './Panel/Panel';\nimport { Direction } from './Panel/constants';\nimport Resizer from './Panel/Resizer';\n\nfunction FarmerHarvestList(props) {\n  _s();\n\n  const {\n    handleDrag,\n    handleMouseDown\n  } = props;\n  const {\n    harvests,\n    getAllHarvests,\n    myHarvestIsClicked\n  } = useContext(HarvestContext);\n  const panelRef = useRef(null);\n  useEffect(() => {\n    getAllHarvests();\n  }, []);\n\n  const handleResize = (direction, movementX, movementY) => {\n    console.log(direction, movementX, movementY);\n    const panel = panelRef.current;\n    if (!panel) return;\n    const {\n      width,\n      height,\n      x,\n      y\n    } = panel.getBoundingClientRect();\n\n    const resizeTop = () => {\n      panel.style.height = `${height - movementY}px`;\n      panel.style.top = `${y + movementY}px`;\n    };\n\n    const resizeRight = () => {\n      panel.style.width = `${width - movementX}px`;\n    };\n\n    const resizeBottom = () => {\n      panel.style.height = `${height - movementY}px`;\n    };\n\n    const resizeLeft = () => {\n      panel.style.width = `${width - movementX}px`;\n      panel.style.left = `${x + movementX}px`;\n    };\n\n    switch (direction) {\n      case Direction.TopLeft:\n        resizeTop();\n        resizeLeft();\n        break;\n\n      case Direction.Top:\n        resizeTop();\n        break;\n\n      case Direction.TopRight:\n        resizeTop();\n        resizeRight();\n        break;\n\n      case Direction.Right:\n        resizeRight();\n        break;\n\n      case Direction.BottomRight:\n        resizeBottom();\n        resizeRight();\n        break;\n\n      case Direction.Bottom:\n        resizeBottom();\n        break;\n\n      case Direction.BottomLeft:\n        resizeBottom();\n        resizeLeft();\n        break;\n\n      case Direction.Left:\n        resizeLeft();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    handleDrag: handleDrag,\n    handleMouseDown: true,\n    style: myHarvestIsClicked ? {\n      visibility: \"visible\"\n    } : {\n      visibility: \"hidden\"\n    },\n    className: \"farmerHarvest-App\",\n    children: /*#__PURE__*/_jsxDEV(Panel, {\n      children: [/*#__PURE__*/_jsxDEV(Resizer, {\n        onResize: handleResize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"myHarvestText\",\n        children: \"My Harvests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        item: true,\n        xs: 12,\n        className: \"myHarvestList\",\n        children: harvests.map(harvest => /*#__PURE__*/_jsxDEV(Harvest, {\n          title: harvest.title,\n          image: harvest.harvestImg,\n          label: harvest.body,\n          farmer: harvest.userHandle\n        }, v4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 31\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 8\n  }, this);\n}\n\n_s(FarmerHarvestList, \"mH8EByO7YpDdi+WON01dKkJYca4=\");\n\n_c = FarmerHarvestList;\nexport default FarmerHarvestList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerHarvestList\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestList.js"],"names":["React","useContext","useEffect","useState","useRef","Harvest","HarvestContext","v4","Panel","Direction","Resizer","FarmerHarvestList","props","handleDrag","handleMouseDown","harvests","getAllHarvests","myHarvestIsClicked","panelRef","handleResize","direction","movementX","movementY","console","log","panel","current","width","height","x","y","getBoundingClientRect","resizeTop","style","top","resizeRight","resizeBottom","resizeLeft","left","TopLeft","Top","TopRight","Right","BottomRight","Bottom","BottomLeft","Left","visibility","map","harvest","title","harvestImg","body","userHandle"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react'\nimport Harvest from './Harvest'\nimport {HarvestContext} from '../context/HarvestProvider'\nimport {v4} from 'uuid'\nimport Panel from './Panel/Panel'\nimport { Direction } from './Panel/constants'\nimport Resizer from './Panel/Resizer'\n\n\nfunction FarmerHarvestList(props) {\n    const {handleDrag, handleMouseDown} = props\n    const { harvests, getAllHarvests, myHarvestIsClicked} = useContext(HarvestContext)\n    \n    const panelRef = useRef(null)\n\n\n    useEffect(() => {\n\n      getAllHarvests()\n     \n\n  }, []\n  )\n\n \n     const handleResize = (direction, movementX, movementY)=> {\n         console.log(direction, movementX, movementY)\n \n         const panel = panelRef.current\n         if(!panel) return\n       \n         const { width, height, x, y } = panel.getBoundingClientRect()\n \n         const resizeTop = () => {\n             panel.style.height = `${height - movementY}px`\n             panel.style.top = `${y + movementY}px`\n \n         }\n         const resizeRight = () => {\n             panel.style.width = `${width - movementX}px`\n             \n         }\n         const resizeBottom = () => {\n             panel.style.height = `${height - movementY}px`\n             \n         }\n         const resizeLeft = () => {\n             panel.style.width = `${width - movementX}px`\n             panel.style.left = `${x + movementX}px`\n             \n         }\n         switch (direction){\n             case Direction.TopLeft:\n                 resizeTop();\n                 resizeLeft();\n                 break;\n             \n             case Direction.Top:\n                 resizeTop();\n                 break;\n \n             case Direction.TopRight:\n                 resizeTop();\n                 resizeRight();\n                 break;\n \n             case Direction.Right:\n                 resizeRight();\n                 break;\n \n             case Direction.BottomRight:\n                 resizeBottom();\n                 resizeRight();\n                 break;\n \n             case Direction.Bottom:\n                 resizeBottom();\n                 break;\n \n             case Direction.BottomLeft:\n                 resizeBottom();\n                 resizeLeft();\n                 break;\n \n             case Direction.Left:\n                 resizeLeft();\n                 break;\n \n             default:\n                 break;\n \n         }\n\n        }\n\n    return (\n     \n       \n       \n       <div handleDrag={handleDrag}\n            handleMouseDown\n                  style={myHarvestIsClicked \n                    ? \n                  {visibility: \"visible\"} \n                    :\n                  {visibility: \"hidden\"}}\n            \n       className=\"farmerHarvest-App\">\n             <Panel>\n              <Resizer onResize={handleResize}/> \n             \n                <h1 className=\"myHarvestText\">My Harvests</h1>\n                <div item xs={12} className=\"myHarvestList\">\n                    {harvests.map(harvest => \n                              <Harvest \n                                  title={harvest.title} \n                                  image={harvest.harvestImg} \n                                  label={harvest.body} \n                                  farmer={harvest.userHandle}\n                                  key={v4()} \n                              />)\n                    }\n                </div>\n                </Panel>     \n        </div>\n       \n       \n\n    )\n}\n\nexport default FarmerHarvestList"]},"metadata":{},"sourceType":"module"}