{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/Panel/Panel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\n\nconst Panel = ({\n  children\n}) => {\n  _s();\n\n  const panelRef = useRef(null);\n\n  const handleDrag = (movementX, movementY) => {\n    const panel = panelRef.current;\n    if (!panel) return;\n    const {\n      x,\n      y\n    } = panel.getBoundingClientRect();\n    panel.style.left = `${x + movementX}px`;\n    panel.style.top = `${y + movementY}px`;\n  };\n\n  const [mouseDown, setMouseDown] = useState(false);\n\n  const handleMouseDown = () => setMouseDown(true);\n\n  useEffect(() => {\n    const handleMouseUp = () => setMouseDown(false);\n\n    window.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      window.addEventListener('mouseup', handleMouseUp);\n    };\n  }, []);\n  useEffect(() => {\n    const handleMouseMove = e => onDrag(e.movementX, e.movementY);\n\n    if (mouseDown) {\n      window.addEventListener('mousemove', handleMouseMove);\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [mouseDown, onDrag]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    onDrag: handleDrag,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Panel, \"kFYRrIxsoBXCYZ1ROQifB8tXoK0=\");\n\n_c = Panel;\nexport default Panel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Panel\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/Panel/Panel.js"],"names":["React","useRef","useEffect","useState","Panel","children","panelRef","handleDrag","movementX","movementY","panel","current","x","y","getBoundingClientRect","style","left","top","mouseDown","setMouseDown","handleMouseDown","handleMouseUp","window","addEventListener","handleMouseMove","e","onDrag","removeEventListener"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;;AAOA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAE1B,QAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;;AAEA,QAAMM,UAAU,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACzC,UAAMC,KAAK,GAAGJ,QAAQ,CAACK,OAAvB;AAEA,QAAG,CAACD,KAAJ,EAAY;AAGZ,UAAM;AAAEE,MAAAA,CAAF;AAAKC,MAAAA;AAAL,QAAWH,KAAK,CAACI,qBAAN,EAAjB;AAEAJ,IAAAA,KAAK,CAACK,KAAN,CAAYC,IAAZ,GAAoB,GAAEJ,CAAC,GAAGJ,SAAU,IAApC;AACAE,IAAAA,KAAK,CAACK,KAAN,CAAYE,GAAZ,GAAmB,GAAEJ,CAAC,GAAGJ,SAAU,IAAnC;AAEH,GAXD;;AAYA,QAAM,CAAES,SAAF,EAAaC,YAAb,IAA8BhB,QAAQ,CAAC,KAAD,CAA5C;;AACA,QAAMiB,eAAe,GAAG,MAAMD,YAAY,CAAC,IAAD,CAA1C;;AAGEjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,aAAa,GAAG,MAAMF,YAAY,CAAC,KAAD,CAAxC;;AACAG,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCF,aAAnC;AACA,WAAO,MAAM;AACbC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCF,aAAnC;AACC,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAQAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,eAAe,GAAIC,CAAD,IAAOC,MAAM,CAACD,CAAC,CAACjB,SAAH,EAAciB,CAAC,CAAChB,SAAhB,CAArC;;AAEA,QAAGS,SAAH,EAAc;AACZI,MAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCC,eAArC;AACD;;AACD,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACK,mBAAP,CAA2B,WAA3B,EAAyCH,eAAzC;AACD,KAFD;AAGD,GATQ,EASN,CAACN,SAAD,EAAYQ,MAAZ,CATM,CAAT;AAYF,sBAEI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,MAAM,EAAEnB,UAA/B;AAAA,cAISF;AAJT;AAAA;AAAA;AAAA;AAAA,UAFJ;AAYH,CApDD;;GAAMD,K;;KAAAA,K;AAsDN,eAAeA,KAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\n\n\n\n\n\n\nconst Panel = ({children}) => {\n\n    const panelRef = useRef(null)\n\n    const handleDrag = (movementX, movementY) => {\n        const panel = panelRef.current\n       \n        if(!panel)  return\n       \n       \n        const { x, y } = panel.getBoundingClientRect()\n           \n        panel.style.left = `${x + movementX}px`\n        panel.style.top = `${y + movementY}px`\n        \n    }\n    const [ mouseDown, setMouseDown ] = useState(false)\n    const handleMouseDown = () => setMouseDown(true)\n\n\n      useEffect(() => {\n        const handleMouseUp = () => setMouseDown(false)\n        window.addEventListener('mouseup', handleMouseUp)\n        return () => {\n        window.addEventListener('mouseup', handleMouseUp)\n        }\n      }, [])\n\n      useEffect(() => {\n        const handleMouseMove = (e) => onDrag(e.movementX, e.movementY)\n  \n        if(mouseDown) {\n          window.addEventListener('mousemove', handleMouseMove)\n        }\n        return () => {\n          window.removeEventListener('mousemove',  handleMouseMove)\n        }\n      }, [mouseDown, onDrag])\n     \n\n    return(\n       \n        <div className=\"panel\" onDrag={handleDrag}>\n          \n\n              \n                {children}\n          \n            \n        </div>\n       \n    )\n}\n\nexport default Panel"]},"metadata":{},"sourceType":"module"}