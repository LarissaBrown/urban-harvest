{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nexport default function Contact(props) {\n  _s();\n\n  const [isClicked, setIsClicked] = useState(false);\n  const {\n    farmer\n  } = props; //when you click on contact a contact form will show up that is connected to js email and the farmer will be contacted. \n  //idea: have a verbal recording that can be done to attach to the contact email for the user to leave a voice message. \n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        action: \"#\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              id: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"message\",\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"message\",\n              name: \"message\",\n              id: \"message\",\n              rows: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            textDecoration: \"none\"\n          },\n          className: \"actions\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Send Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Contact: \", farmer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Contact, \"+2jvnzgqyS4sm44z1s1whgWD4Tg=\");\n\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/Contact.js"],"names":["React","useState","Contact","props","isClicked","setIsClicked","farmer","textDecoration"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAKA,eAAe,SAASC,OAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AACnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AAEJ,QAAM;AAACK,IAAAA;AAAD,MAAWH,KAAjB,CAHuC,CAIvC;AACA;;AAMI,sBACI;AAAA,2BACI;AAAA,6BACP;AAAM,QAAA,MAAM,EAAC,MAAb;AAAoB,QAAA,MAAM,EAAC,GAA3B;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACC;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACC;AAAO,cAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC,MAAxB;AAA+B,cAAA,EAAE,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,oBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAKC;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACC;AAAO,cAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC,OAAxB;AAAgC,cAAA,EAAE,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,oBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,kBALD,eASC;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACC;AAAO,cAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC;AAAU,cAAA,SAAS,EAAC,SAApB;AAA8B,cAAA,IAAI,EAAC,SAAnC;AAA6C,cAAA,EAAE,EAAC,SAAhD;AAA0D,cAAA,IAAI,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,oBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,kBATD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAeI;AAAI,UAAA,KAAK,EAAE;AAACI,YAAAA,cAAc,EAAE;AAAjB,WAAX;AAAoC,UAAA,SAAS,EAAC,SAA9C;AAAA,iCACF;AAAA,mCAAK;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAkBmB;AAAA,kCAAcD,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA2BH;;GAtCuBJ,O;;KAAAA,O","sourcesContent":["import React, { useState } from 'react'\n\n\n\n\nexport default function Contact (props){\n    const [isClicked, setIsClicked] = useState(false)\n\nconst {farmer} = props\n//when you click on contact a contact form will show up that is connected to js email and the farmer will be contacted. \n//idea: have a verbal recording that can be done to attach to the contact email for the user to leave a voice message. \n\n\n\n\n\n    return (\n        <>\n            <section>\n\t\t\t\t\t<form method=\"post\" action=\"#\">\n\t\t\t\t\t\t<div className=\"fields\">\n\t\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t\t<label for=\"name\">Name</label>\n\t\t\t\t\t\t\t\t<input type=\"text\" name=\"name\" id=\"name\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t\t<label for=\"email\">Email</label>\n\t\t\t\t\t\t\t\t<input type=\"text\" name=\"email\" id=\"email\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t\t<label for=\"message\">Message</label>\n\t\t\t\t\t\t\t\t<textarea className=\"message\" name=\"message\" id=\"message\" rows=\"5\"></textarea>\n\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t    <ul style={{textDecoration: \"none\"}}className=\"actions\">\n\t\t\t\t\t\t\t<li ><input type=\"submit\" value=\"Send Message\" /></li>\n\t\t\t\t\t\t</ul>\n                        <p >Contact: {farmer}</p>\n\t\t\t\t\t</form>\n\t\t\t</section>\n               \n        </>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}