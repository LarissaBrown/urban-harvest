{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Unsplash, { toJson } from \"unsplash-js\";\nimport { v4 } from 'uuid'; //import DragMove from \"./DragMove\"\n//import Resizer from \"./Panel/Resizer\"\n//import Access_Key from './.env'\n\nexport default function FarmerHarvestPhotos(props) {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [translate, setTranslate] = useState({\n    x: 0,\n    y: 0\n  });\n  const {\n    isClicked\n  } = props;\n  useEffect(() => {\n    const handleMouseUp = () => setMouseDown(false);\n\n    window.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      window.addEventListener('mouseup', handleMouseUp);\n    };\n  }, []);\n  useEffect(() => {\n    const handleMouseMove = e => onrag(e.movementX, e.movementY);\n\n    if (mouseDown) {\n      window.addEventListener('mousemove', handleMouseMove);\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [mouseDown, onDrag]);\n\n  const handleMouseDown = () => setMouseDown(true);\n\n  const unsplash = new Unsplash({\n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" //...other fetch options\n    // `fetch` options to be sent with every request\n    //headers: { 'X-Custom-Header': 'foo' },\n\n  }); //syntax for searching photos\n  //search.photos(keyword, page, per_page, filters)\n\n  const searchPhotos = async event => {\n    event.preventDefault();\n    unsplash.search.photos(query).then(toJson).then(json => {\n      setPics(json.results);\n    });\n  }; //searchPhotos(unsplash)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Panel, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseDown: handleMouseDown,\n        className: \"panel_container\",\n        style: isClicked ? {\n          visibility: \"visible\",\n          position: 'absolute'\n        } : {\n          visibility: \"hidden\",\n          position: 'absolute'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            transform: `translateX(${translate.x}px) translateY(${translate.y}px)`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unsplash-App\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"unsplash-title\",\n              children: \"Harvest Image Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"unsplash-form\",\n              onSubmit: searchPhotos,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"unsplash-label\",\n                htmlFor: \"query\",\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"query\",\n                className: \"unsplash-input\",\n                placeholder: `Try \"carrots\" or \"apples\"`,\n                value: query,\n                onChange: e => setQuery(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"unsplash-button\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-list\",\n              children: pics.map(pic => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"card--image\",\n                  alt: pic.alt_description,\n                  src: pic.urls.full,\n                  width: \"50%\",\n                  height: \"50%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 17\n                }, this)\n              }, v4(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 13\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\n_s(FarmerHarvestPhotos, \"kthSwV0bCiGswKyzWlZ+o/jeSxY=\");\n\n_c = FarmerHarvestPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerHarvestPhotos\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js"],"names":["React","useState","useEffect","Unsplash","toJson","v4","FarmerHarvestPhotos","props","query","setQuery","pics","setPics","mouseDown","setMouseDown","translate","setTranslate","x","y","isClicked","handleMouseUp","window","addEventListener","handleMouseMove","e","onrag","movementX","movementY","removeEventListener","onDrag","handleMouseDown","unsplash","accessKey","searchPhotos","event","preventDefault","search","photos","then","json","results","visibility","position","transform","target","value","map","pic","alt_description","urls","full"],"mappings":"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","sourcesContent":["import React, { useState, useEffect}from 'react'\nimport  Unsplash,{ toJson } from \"unsplash-js\"\nimport {v4} from 'uuid'\n//import DragMove from \"./DragMove\"\n//import Resizer from \"./Panel/Resizer\"\n\n\n//import Access_Key from './.env'\n\n\n\nexport default function FarmerHarvestPhotos(props) {\n    const [query, setQuery] = useState(\"\")\n    const [ pics, setPics ] = useState([])\n    const [ mouseDown, setMouseDown ] = useState(false)\n    const [translate, setTranslate] = useState({\n        x: 0,\n        y: 0\n      });\n    const {isClicked} = props\n     \n    useEffect(() => {\n      const handleMouseUp = () => setMouseDown(false)\n      window.addEventListener('mouseup', handleMouseUp)\n      return () => {\n        window.addEventListener('mouseup', handleMouseUp)\n      }\n    }, [])\n\n    useEffect(() => {\n      const handleMouseMove = (e) => onrag(e.movementX, e.movementY)\n\n      if(mouseDown) {\n        window.addEventListener('mousemove', handleMouseMove)\n      }\n      return () => {\n        window.removeEventListener('mousemove',  handleMouseMove)\n      }\n    }, [mouseDown, onDrag])\n    const handleMouseDown = () => setMouseDown(true)\n\n\n    const unsplash = new Unsplash({\n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" \n    //...other fetch options\n     // `fetch` options to be sent with every request\n    //headers: { 'X-Custom-Header': 'foo' },\n    });\n\n  \n    //syntax for searching photos\n    //search.photos(keyword, page, per_page, filters)\n\n    const searchPhotos = async(event) => {\n        event.preventDefault()\n\n        unsplash.search\n        .photos(query)\n        .then((toJson))\n        .then((json) => {\n            setPics(json.results)\n        })\n    };\n\n\n    //searchPhotos(unsplash)\n    \n    \n    return(\n      <>\n  <Panel >\n    <div onMouseDown={handleMouseDown} className=\"panel_container\" \n         style={isClicked\n         ? \n         {visibility: \"visible\", position: 'absolute'} \n         :\n          {visibility: \"hidden\", position: 'absolute'}}>\n      \n        <div style={{\n              transform: `translateX(${translate.x}px) translateY(${translate.y}px)`,\n              \n            }} \n           >\n        <div className='unsplash-App'>\n            <h1 className=\"unsplash-title\">Harvest Image Search</h1>\n\n        <form className=\"unsplash-form\" onSubmit={searchPhotos}> \n            <label className=\"unsplash-label\" htmlFor=\"query\"> \n            {\" \"}\n            </label>\n            <input\n            type=\"text\"\n            name=\"query\"\n            className=\"unsplash-input\"\n            placeholder={`Try \"carrots\" or \"apples\"`}\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            />\n            <button type=\"submit\" className=\"unsplash-button\">\n            <p>Search</p>\n            </button>\n        </form>\n        <div className=\"card-list\" >\n          {\n          pics.map((pic) => \n            <div key={v4()} className=\"card\">\n                <img\n                    className=\"card--image\"\n                    alt={pic.alt_description}\n                    src={pic.urls.full}\n                    width=\"50%\"\n                    height=\"50%\"\n                ></img>\n            </div>)\n          }\n        </div>\n        </div>\n    </div>\n </div>\n  </Panel>   \n  </> \n   \n  );\n}\n   "]},"metadata":{},"sourceType":"module"}