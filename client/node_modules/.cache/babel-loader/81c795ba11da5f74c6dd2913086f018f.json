{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/DragMove.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nexport default function DragMove(props) {\n  _s();\n\n  const {\n    func,\n    element,\n    shape,\n    bool,\n    string\n  } = PropTypes;\n  DragMove.propTypes = {\n    onDragMove: func.isRequired,\n    onPointerDown: func,\n    onPointerUp: func,\n    onPointerMove: func,\n    children: element,\n    style: shape({}),\n    className: string\n  };\n  DragMove.defaultProps = {\n    onPointerDown: () => {},\n    onPointerUp: () => {},\n    onPointerMove: () => {}\n  };\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handlePointerDown = e => {\n    setIsDragging(true);\n    onPointerDown(e);\n  };\n\n  const handlePointerUp = e => {\n    setIsDragging(false);\n    onPointerUp(e);\n  };\n\n  const handlePointerMove = e => {\n    if (isDragging) onDragMove(e);\n    onPointerMove(e);\n  };\n\n  useEffect(() => {\n    window.addEventListener('pointerup', handlePointerUp);\n    return () => {\n      window.removeEventListener('pointerup', handlePointerUp);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onPointerDown: handlePointerDown,\n    onPointerMove: handlePointerMove,\n    style: style,\n    className: className,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DragMove, \"zjq2sSup4GXUtmqwnFzGU3LD3go=\");\n\n_c = DragMove;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragMove\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/DragMove.js"],"names":["React","useEffect","useState","PropTypes","DragMove","props","func","element","shape","bool","string","propTypes","onDragMove","isRequired","onPointerDown","onPointerUp","onPointerMove","children","style","className","defaultProps","isDragging","setIsDragging","handlePointerDown","e","handlePointerUp","handlePointerMove","window","addEventListener","removeEventListener"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAGtC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA;AAA9B,MAAyCP,SAA/C;AAEAC,EAAAA,QAAQ,CAACO,SAAT,GAAqB;AACnBC,IAAAA,UAAU,EAAEN,IAAI,CAACO,UADE;AAEnBC,IAAAA,aAAa,EAAER,IAFI;AAGnBS,IAAAA,WAAW,EAAET,IAHM;AAInBU,IAAAA,aAAa,EAAEV,IAJI;AAKnBW,IAAAA,QAAQ,EAAEV,OALS;AAMnBW,IAAAA,KAAK,EAAEV,KAAK,CAAC,EAAD,CANO;AAOnBW,IAAAA,SAAS,EAAET;AAPQ,GAArB;AAUAN,EAAAA,QAAQ,CAACgB,YAAT,GAAwB;AACtBN,IAAAA,aAAa,EAAE,MAAM,CAAE,CADD;AAEtBC,IAAAA,WAAW,EAAE,MAAM,CAAE,CAFC;AAGtBC,IAAAA,aAAa,EAAE,MAAM,CAAE;AAHD,GAAxB;AAOA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMqB,iBAAiB,GAAIC,CAAD,IAAO;AAC/BF,IAAAA,aAAa,CAAC,IAAD,CAAb;AAEAR,IAAAA,aAAa,CAACU,CAAD,CAAb;AACD,GAJD;;AAMA,QAAMC,eAAe,GAAID,CAAD,IAAO;AAC7BF,IAAAA,aAAa,CAAC,KAAD,CAAb;AAEAP,IAAAA,WAAW,CAACS,CAAD,CAAX;AACD,GAJD;;AAMA,QAAME,iBAAiB,GAAIF,CAAD,IAAO;AAC/B,QAAIH,UAAJ,EAAgBT,UAAU,CAACY,CAAD,CAAV;AAEhBR,IAAAA,aAAa,CAACQ,CAAD,CAAb;AACD,GAJD;;AAMAvB,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCH,eAArC;AAEA,WAAO,MAAM;AACXE,MAAAA,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAwCJ,eAAxC;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAUA,sBACE;AACE,IAAA,aAAa,EAAEF,iBADjB;AAEE,IAAA,aAAa,EAAEG,iBAFjB;AAGE,IAAA,KAAK,EAAER,KAHT;AAIE,IAAA,SAAS,EAAEC,SAJb;AAAA,cAMGF;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA9DuBb,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function DragMove(props) {\n\n\n  const { func, element, shape, bool, string } = PropTypes;\n\n  DragMove.propTypes = {\n    onDragMove: func.isRequired,\n    onPointerDown: func,\n    onPointerUp: func,\n    onPointerMove: func,\n    children: element,\n    style: shape({}),\n    className: string,\n  }\n  \n  DragMove.defaultProps = {\n    onPointerDown: () => {},\n    onPointerUp: () => {},\n    onPointerMove: () => {},\n  };\n\n\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handlePointerDown = (e) => {\n    setIsDragging(true);\n\n    onPointerDown(e);\n  };\n  \n  const handlePointerUp = (e) => {\n    setIsDragging(false);\n    \n    onPointerUp(e);\n  };\n  \n  const handlePointerMove = (e) => {\n    if (isDragging) onDragMove(e);\n    \n    onPointerMove(e);\n  };\n\n  useEffect(() => {\n    window.addEventListener('pointerup', handlePointerUp);\n\n    return () => {\n      window.removeEventListener('pointerup', handlePointerUp);\n    }\n  }, []);\n\n\n\n  return (\n    <div\n      onPointerDown={handlePointerDown}\n      onPointerMove={handlePointerMove}\n      style={style}\n      className={className}\n    >\n      {children}\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}