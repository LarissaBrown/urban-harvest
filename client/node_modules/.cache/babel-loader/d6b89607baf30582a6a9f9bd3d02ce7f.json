{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport AuthForm from './AuthForm.js';\nimport { UserContext } from '../context/UserProvider';\nconst initInputs = {\n  username: \"\",\n  password: \"\",\n  confirmPassword: '',\n  email: \"\"\n};\nexport default function Auth() {\n  _s();\n\n  const [inputs, setInputs] = useState(initInputs);\n  const [toggle, setToggle] = useState(false);\n  const {\n    signup,\n    login\n  } = useContext(UserContext);\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(prevInputs => ({ ...prevInputs,\n      [name]: value\n    }));\n  }\n\n  function handleSignup(e) {\n    e.preventDefault();\n    signup(inputs);\n  }\n\n  function handleLogin(e) {\n    e.preventDefault();\n    login(inputs);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"class-name\": \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Urban Harvest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), !toggle ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AuthForm, {\n        handleChange: handleChange,\n        handleSubmit: handleSignup,\n        inputs: inputs,\n        btnText: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => setToggle(prev => !prev),\n        children: \"Already a Harvest Farmer?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AuthForm, {\n        handleChange: handleChange,\n        handleSubmit: handleLogin,\n        inputs: inputs,\n        btnText: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => setToggle(prev => !prev),\n        children: \"Become a Harvest Farmer?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Auth, \"wbn0GZ+w67A7beX5IaIMEsxzQC8=\");\n\n_c = Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/Auth.js"],"names":["React","useState","useContext","AuthForm","UserContext","initInputs","username","password","confirmPassword","email","Auth","inputs","setInputs","toggle","setToggle","signup","login","handleChange","e","name","value","target","prevInputs","handleSignup","preventDefault","handleLogin","prev"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAAUC,WAAV,QAA6B,yBAA7B;AAEA,MAAMC,UAAU,GAAG;AAAEC,EAAAA,QAAQ,EAAE,EAAZ;AAAgBC,EAAAA,QAAQ,EAAE,EAA1B;AAA8BC,EAAAA,eAAe,EAAE,EAA/C;AAAmDC,EAAAA,KAAK,EAAE;AAA1D,CAAnB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAACI,UAAD,CAApC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAM;AAACc,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAkBd,UAAU,CAACE,WAAD,CAAlC;;AACA,WAASa,YAAT,CAAsBC,CAAtB,EAAwB;AACpB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAT,IAAAA,SAAS,CAACU,UAAU,KAAK,EACrB,GAAGA,UADkB;AAErB,OAACH,IAAD,GAAQC;AAFa,KAAL,CAAX,CAAT;AAIH;;AAED,WAASG,YAAT,CAAsBL,CAAtB,EAAwB;AACpBA,IAAAA,CAAC,CAACM,cAAF;AACAT,IAAAA,MAAM,CAACJ,MAAD,CAAN;AACH;;AAED,WAASc,WAAT,CAAqBP,CAArB,EAAuB;AACnBA,IAAAA,CAAC,CAACM,cAAF;AACAR,IAAAA,KAAK,CAACL,MAAD,CAAL;AACH;;AAED,sBACI;AAAK,kBAAW,gBAAhB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEM,CAACE,MAAD,gBACF;AAAA,8BACI,QAAC,QAAD;AACI,QAAA,YAAY,EAAEI,YADlB;AAEI,QAAA,YAAY,EAAEM,YAFlB;AAGI,QAAA,MAAM,EAAEZ,MAHZ;AAII,QAAA,OAAO,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAG,QAAA,OAAO,EAAE,MAAMG,SAAS,CAACY,IAAI,IAAI,CAACA,IAAV,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA,oBADE,gBAWF;AAAA,8BACI,QAAC,QAAD;AACI,QAAA,YAAY,EAAET,YADlB;AAEI,QAAA,YAAY,EAAEQ,WAFlB;AAGI,QAAA,MAAM,EAAEd,MAHZ;AAII,QAAA,OAAO,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAG,QAAA,OAAO,EAAE,MAAMG,SAAS,CAACY,IAAI,IAAI,CAACA,IAAV,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GAlDuBhB,I;;KAAAA,I","sourcesContent":["import React, { useState, useContext } from 'react'\nimport AuthForm from './AuthForm.js'\nimport  { UserContext } from '../context/UserProvider'\n\nconst initInputs = { username: \"\", password: \"\", confirmPassword: '' ,email: \"\"}\n\nexport default function Auth() {\n    const [inputs, setInputs] = useState(initInputs)\n    const [toggle, setToggle] = useState(false)\n\n    const {signup, login} = useContext(UserContext)\n    function handleChange(e){\n        const { name, value } = e.target\n        setInputs(prevInputs => ({\n            ...prevInputs, \n            [name]: value\n        }))\n    }\n\n    function handleSignup(e){\n        e.preventDefault()\n        signup(inputs)\n    }\n\n    function handleLogin(e){\n        e.preventDefault()\n        login(inputs)\n    }\n\n    return (\n        <div class-name=\"auth-container\">\n            <h1>Urban Harvest</h1>\n            { !toggle ? \n            <>\n                <AuthForm\n                    handleChange={handleChange}\n                    handleSubmit={handleSignup}\n                    inputs={inputs}\n                    btnText=\"Sign Up\"\n                />\n                <p onClick={( )=> setToggle(prev => !prev)}>Already a Harvest Farmer?</p>\n            </>\n        :\n            <>\n                <AuthForm \n                    handleChange={handleChange}\n                    handleSubmit={handleLogin}\n                    inputs={inputs}\n                    btnText=\"Login\"\n                />\n                <p onClick={() => setToggle(prev => !prev)}>Become a Harvest Farmer?</p>\n            </>\n\n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}