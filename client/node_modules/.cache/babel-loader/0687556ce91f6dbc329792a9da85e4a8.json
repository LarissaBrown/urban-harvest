{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/context/HarvestProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { userAxios } from \"./UserProvider\";\nimport axios from 'axios';\nexport const HarvestContext = /*#__PURE__*/React.createContext();\nexport const harvestAxios = axios.create();\nexport default function HarvestProvider(props) {\n  _s();\n\n  //const [harvest, setHarvest] = useState({body: 'This is about the harvest.', harvestImg: 'imgUrl', userHandle:'FarmerName'})\n  const [harvests, setHarvests] = useState([{\n    body: 'This is about the harvest.',\n    harvestImg: 'imgUrl',\n    userHandle: 'FarmerName'\n  }, {\n    body: 'This is about the harvest.',\n    harvestImg: 'imgUrl',\n    userHandle: 'FarmerName'\n  }]);\n\n  const getAllHarvests = () => {\n    userAxios.get(`/harvests`).then(response => {\n      setHarvests([...harvests, response.data]);\n    }).catch(err => console.error(err));\n  };\n\n  const getHarvest = id => {\n    userAxios.get(`/api/harvest/${id}`).then(response => {\n      setHarvest(prevHarvests => prevHarvests.map(harvest => harvest._id === id ? { ...harvest\n      } : harvest));\n    }).catch(err => console.error(err));\n  };\n\n  const updateHarvest = (id, data) => {\n    userAxios.put(`/api/harvest/${id}`, data).then(response => {\n      const index = harvests.findIndex(harvest => harvest._id === id);\n      const updated = [...harvests];\n      updated[index].harvest = response.data;\n      setHarvests([updated]);\n    }).catch(err => console.dir(err));\n  };\n\n  const deleteHarvest = id => {\n    userAxios.delete(`/api/harvest/${id}`).then(response => {\n      setHarvest(prevHarvests => [prevHarvests.filter(harvest => harvest.user._id !== id), response.data]);\n    }).catch(err => console.dir(err));\n  };\n\n  const getUserHarvests = id => {\n    userAxios.get(`/api/harvest/${id}`).then(response => {\n      setHarvest(prevHarvests => [prevHarvests.filter(harvest => harvest.user === id)], response.data);\n    }).catch(err => console.log(err.response.data.errMsg));\n  };\n\n  const addHarvest = body => {\n    userAxios.post(`/api/harvest`, body).then(response => {\n      setHarvests(prevHarvests => [...prevHarvests], response.data);\n    }).catch(err => console.dir(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(HarvestContext.Provider, {\n    value: {\n      harvests,\n      harvest,\n      getAllHarvests,\n      getUserHarvests,\n      deleteHarvest,\n      updateHarvest,\n      addHarvest,\n      getHarvest\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HarvestProvider, \"1BWCb4FgtCPdMbjYJzcF7AnTSPk=\");\n\n_c = HarvestProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"HarvestProvider\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/context/HarvestProvider.js"],"names":["React","useState","useContext","userAxios","axios","HarvestContext","createContext","harvestAxios","create","HarvestProvider","props","harvests","setHarvests","body","harvestImg","userHandle","getAllHarvests","get","then","response","data","catch","err","console","error","getHarvest","id","setHarvest","prevHarvests","map","harvest","_id","updateHarvest","put","index","findIndex","updated","dir","deleteHarvest","delete","filter","user","getUserHarvests","log","errMsg","addHarvest","post","children"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from \"react\";\nimport { userAxios} from \"./UserProvider\";\nimport axios from 'axios'\n\n\n\nexport const HarvestContext = React.createContext();\nexport const harvestAxios = axios.create() \n\n\nexport default function HarvestProvider(props) {\n   \n   \n    //const [harvest, setHarvest] = useState({body: 'This is about the harvest.', harvestImg: 'imgUrl', userHandle:'FarmerName'})\n    const [harvests, setHarvests] = useState([{body: 'This is about the harvest.', harvestImg: 'imgUrl', userHandle:'FarmerName'},{body: 'This is about the harvest.', harvestImg: 'imgUrl', userHandle:'FarmerName'}])\n    \n\n    const getAllHarvests = () => {\n        userAxios.get(`/harvests`) \n        .then(response => {\n            setHarvests([...harvests, response.data]) \n            \n            \n         })\n         .catch(err => console.error(err))\n         \n            \n        }\n    \n   \n    const getHarvest = (id)=> {\n        userAxios.get(`/api/harvest/${id}`)\n        .then(response => {\n            setHarvest(prevHarvests => prevHarvests.map(harvest=> harvest._id === id? {...harvest} : harvest)) \n        }).catch(err => console.error(err))\n    }\n\n\n\t\n\tconst updateHarvest = (id, data) => {\n\t\tuserAxios.put(`/api/harvest/${id}`, data).then(response => {\n\t\t\tconst index = harvests.findIndex(harvest => harvest._id === id)\n\t\t\tconst updated = [...harvests];\n\t\t\tupdated[index].harvest = response.data;\n\t\t\tsetHarvests([updated]);\n\t\t}).catch(err => console.dir(err));\n    };\n    \n   \n\n\tconst deleteHarvest = id => {\n\t\tuserAxios.delete(`/api/harvest/${id}`).then(response => {\n\t\t\tsetHarvest(prevHarvests => [prevHarvests.filter(harvest => harvest.user._id !== id), response.data]);\n\t\t}).catch(err => console.dir(err));\n    };\n    \n\tconst getUserHarvests = id =>{\n        userAxios.get(`/api/harvest/${id}`).then(response =>{ \n            setHarvest(prevHarvests => [prevHarvests.filter(harvest => harvest.user === id)],response.data ) \n            \n        })\n        .catch(err => console.log(err.response.data.errMsg))\n    }\n    \n    \n\n\n    const addHarvest  = (body) => {\n        \tuserAxios.post(`/api/harvest`, body).then(response => {\n                setHarvests(prevHarvests => [...prevHarvests] , response.data);\n                \n        \t}).catch(err => console.dir(err));\n        };\n    \n    \n      \n\treturn (\n        <HarvestContext.Provider \n        value = {{\n           harvests,\n           harvest, \n           getAllHarvests,\n           getUserHarvests,\n           deleteHarvest, \n           updateHarvest, \n           addHarvest,\n           getHarvest\n\n        }}>\n\t\t\t{props.children}\n\t\t</HarvestContext.Provider>\n\t);\n}"]},"metadata":{},"sourceType":"module"}