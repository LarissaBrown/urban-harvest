{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport Harvest from './Harvest';\nimport { HarvestContext } from '../context/HarvestProvider';\nimport { v4 } from 'uuid';\nimport Grid from '@material-ui/core/Grid';\nimport Panel from './Panel/Panel';\n\nfunction FarmerHarvestList(props) {\n  _s();\n\n  const {\n    harvests,\n    getAllHarvests,\n    home,\n    setHome\n  } = useContext(HarvestContext);\n  const [mouseDown, setMouseDown] = useState(false);\n  const {\n    myHarvestIsClicked,\n    handle\n  } = props;\n\n  const handleMouseDown = () => setMouseDown(true);\n\n  useEffect(() => {\n    const handleMouseUp = () => setMouseDown(false);\n\n    window.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      window.addEventListener('mouseup', handleMouseUp);\n    };\n  }, []);\n  useEffect(() => {\n    const handleMouseMove = e => handleDrag(e.movementX, e.movementY);\n\n    if (mouseDown) {\n      window.addEventListener('mousemove', handleMouseMove);\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [mouseDown, handleDrag]);\n  useEffect(() => {\n    getAllHarvests();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel_container\",\n      onMouseDown: handleMouseDown,\n      style: myHarvestIsClicked ? {\n        visibility: \"visible\",\n        position: 'absolute'\n      } : {\n        visibility: \"hidden\",\n        position: 'absolute'\n      },\n      children: /*#__PURE__*/_jsxDEV(Panel, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"myHarvestText\",\n          children: \"My Harvests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: \"myHarvestList\",\n          children: harvests.map(harvest => /*#__PURE__*/_jsxDEV(Harvest, {\n            title: harvest.title,\n            image: harvest.harvestImg,\n            label: harvest.body,\n            farmer: harvest.userHandle\n          }, v4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n\n_s(FarmerHarvestList, \"33P5lTG1R/hjPL9kRTfrrMd5Hjk=\");\n\n_c = FarmerHarvestList;\nexport default FarmerHarvestList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerHarvestList\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestList.js"],"names":["React","useContext","useEffect","useState","useRef","Harvest","HarvestContext","v4","Grid","Panel","FarmerHarvestList","props","harvests","getAllHarvests","home","setHome","mouseDown","setMouseDown","myHarvestIsClicked","handle","handleMouseDown","handleMouseUp","window","addEventListener","handleMouseMove","e","handleDrag","movementX","movementY","removeEventListener","visibility","position","map","harvest","title","harvestImg","body","userHandle"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,cAAR,QAA6B,4BAA7B;AACA,SAAQC,EAAR,QAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAIA,SAASC,iBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAE/B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,cAAZ;AAA4BC,IAAAA,IAA5B;AAAkCC,IAAAA;AAAlC,MAA6Cd,UAAU,CAACK,cAAD,CAA7D;AACA,QAAM,CAAEU,SAAF,EAAaC,YAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAM;AAACe,IAAAA,kBAAD;AAAqBC,IAAAA;AAArB,MAA+BR,KAArC;;AAEA,QAAMS,eAAe,GAAG,MAAMH,YAAY,CAAC,IAAD,CAA1C;;AAGEf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,aAAa,GAAG,MAAMJ,YAAY,CAAC,KAAD,CAAxC;;AACAK,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCF,aAAnC;AACA,WAAO,MAAM;AACbC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCF,aAAnC;AACC,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAQAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,eAAe,GAAIC,CAAD,IAAOC,UAAU,CAACD,CAAC,CAACE,SAAH,EAAcF,CAAC,CAACG,SAAhB,CAAzC;;AAEA,QAAGZ,SAAH,EAAc;AACZM,MAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCC,eAArC;AACD;;AACD,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACO,mBAAP,CAA2B,WAA3B,EAAyCL,eAAzC;AACD,KAFD;AAGD,GATQ,EASN,CAACR,SAAD,EAAYU,UAAZ,CATM,CAAT;AAYFxB,EAAAA,SAAS,CAAC,MAAM;AAEZW,IAAAA,cAAc;AAGjB,GALQ,EAKN,EALM,CAAT;AASA,sBACE;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,WAAW,EAAEO,eAA9C;AACW,MAAA,KAAK,EAAEF,kBAAkB,GAEzB;AAACY,QAAAA,UAAU,EAAE,SAAb;AAAwBC,QAAAA,QAAQ,EAAE;AAAlC,OAFyB,GAIzB;AAACD,QAAAA,UAAU,EAAE,QAAb;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC,OALX;AAAA,6BAOO,QAAC,KAAD;AAAA,gCACG;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAEE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,SAAS,EAAC,eAA7B;AAAA,oBACKnB,QAAQ,CAACoB,GAAT,CAAaC,OAAO,iBACX,QAAC,OAAD;AACI,YAAA,KAAK,EAAEA,OAAO,CAACC,KADnB;AAEI,YAAA,KAAK,EAAED,OAAO,CAACE,UAFnB;AAGI,YAAA,KAAK,EAAEF,OAAO,CAACG,IAHnB;AAII,YAAA,MAAM,EAAEH,OAAO,CAACI;AAJpB,aAKS9B,EAAE,EALX;AAAA;AAAA;AAAA;AAAA,kBADT;AADL;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPP;AAAA;AAAA;AAAA;AAAA;AADD,mBADF;AA4BH;;GAnEQG,iB;;KAAAA,iB;AAqET,eAAeA,iBAAf","sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react'\nimport Harvest from './Harvest'\nimport {HarvestContext} from '../context/HarvestProvider'\nimport {v4} from 'uuid'\nimport Grid from '@material-ui/core/Grid'\nimport Panel from './Panel/Panel'\n\n\n\nfunction FarmerHarvestList( props) {\n\n    const { harvests, getAllHarvests, home, setHome} = useContext(HarvestContext)\n    const [ mouseDown, setMouseDown ] = useState(false)\n  \n    const {myHarvestIsClicked, handle} = props\n\n    const handleMouseDown = () => setMouseDown(true)\n\n    \n      useEffect(() => {\n        const handleMouseUp = () => setMouseDown(false)\n        window.addEventListener('mouseup', handleMouseUp)\n        return () => {\n        window.addEventListener('mouseup', handleMouseUp)\n        }\n      }, [])\n\n      useEffect(() => {\n        const handleMouseMove = (e) => handleDrag(e.movementX, e.movementY)\n  \n        if(mouseDown) {\n          window.addEventListener('mousemove', handleMouseMove)\n        }\n        return () => {\n          window.removeEventListener('mousemove',  handleMouseMove)\n        }\n      }, [mouseDown, handleDrag])\n     \n  \n    useEffect(() => {\n\n        getAllHarvests()\n       \n\n    }, []\n    )\n \n\n    return (\n      <>\n       <div className=\"panel_container\" onMouseDown={handleMouseDown} \n                  style={myHarvestIsClicked \n                    ? \n                  {visibility: \"visible\", position: 'absolute'} \n                    :\n                  {visibility: \"hidden\", position: 'absolute'}}\n            >\n              <Panel>\n                 <h1 className=\"myHarvestText\">My Harvests</h1>\n                <Grid item xs={12} className=\"myHarvestList\">\n                    {harvests.map(harvest => \n                              <Harvest \n                                  title={harvest.title} \n                                  image={harvest.harvestImg} \n                                  label={harvest.body} \n                                  farmer={harvest.userHandle}\n                                  key={v4()} \n                              />)\n                    }\n                </Grid>\n                </Panel>\n            </div>\n        \n        </>\n\n    )\n}\n\nexport default FarmerHarvestList"]},"metadata":{},"sourceType":"module"}