{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/DragMove.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nexport default function DragMove(props) {\n  _s();\n\n  const {\n    func,\n    element,\n    shape,\n    bool,\n    string\n  } = PropTypes;\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handlePointerDown = e => {\n    setIsDragging(true);\n    onPointerDown(e);\n  };\n\n  const handlePointerUp = e => {\n    setIsDragging(false);\n    onPointerUp(e);\n  };\n\n  const handlePointerMove = e => {\n    if (isDragging) onDragMove(e);\n    onPointerMove(e);\n  };\n\n  useEffect(() => {\n    window.addEventListener('pointerup', handlePointerUp);\n    return () => {\n      window.removeEventListener('pointerup', handlePointerUp);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onPointerDown: handlePointerDown,\n    onPointerMove: handlePointerMove,\n    style: style,\n    className: className,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DragMove, \"zjq2sSup4GXUtmqwnFzGU3LD3go=\");\n\n_c = DragMove;\nconst {\n  onPointerDown,\n  onPointerUp,\n  onPointerMove,\n  onDragMove,\n  children,\n  style,\n  className\n} = props;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragMove\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/DragMove.js"],"names":["React","useEffect","useState","PropTypes","DragMove","props","func","element","shape","bool","string","isDragging","setIsDragging","handlePointerDown","e","onPointerDown","handlePointerUp","onPointerUp","handlePointerMove","onDragMove","onPointerMove","window","addEventListener","removeEventListener","style","className","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAGtC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA;AAA9B,MAAyCP,SAA/C;AAGA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMW,iBAAiB,GAAIC,CAAD,IAAO;AAC/BF,IAAAA,aAAa,CAAC,IAAD,CAAb;AAEAG,IAAAA,aAAa,CAACD,CAAD,CAAb;AACD,GAJD;;AAMA,QAAME,eAAe,GAAIF,CAAD,IAAO;AAC7BF,IAAAA,aAAa,CAAC,KAAD,CAAb;AAEAK,IAAAA,WAAW,CAACH,CAAD,CAAX;AACD,GAJD;;AAMA,QAAMI,iBAAiB,GAAIJ,CAAD,IAAO;AAC/B,QAAIH,UAAJ,EAAgBQ,UAAU,CAACL,CAAD,CAAV;AAEhBM,IAAAA,aAAa,CAACN,CAAD,CAAb;AACD,GAJD;;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCN,eAArC;AAEA,WAAO,MAAM;AACXK,MAAAA,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAwCP,eAAxC;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAUA,sBACE;AACE,IAAA,aAAa,EAAEH,iBADjB;AAEE,IAAA,aAAa,EAAEK,iBAFjB;AAGE,IAAA,KAAK,EAAEM,KAHT;AAIE,IAAA,SAAS,EAAEC,SAJb;AAAA,cAMGC;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA9CuBtB,Q;;KAAAA,Q;AAgDxB,MAAM;AACFW,EAAAA,aADE;AAEFE,EAAAA,WAFE;AAGFG,EAAAA,aAHE;AAIFD,EAAAA,UAJE;AAKFO,EAAAA,QALE;AAMFF,EAAAA,KANE;AAOFC,EAAAA;AAPE,IAQApB,KARN","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function DragMove(props) {\n\n\n  const { func, element, shape, bool, string } = PropTypes;\n\n \n  const [isDragging, setIsDragging] = useState(false);\n\n  const handlePointerDown = (e) => {\n    setIsDragging(true);\n\n    onPointerDown(e);\n  };\n  \n  const handlePointerUp = (e) => {\n    setIsDragging(false);\n    \n    onPointerUp(e);\n  };\n  \n  const handlePointerMove = (e) => {\n    if (isDragging) onDragMove(e);\n    \n    onPointerMove(e);\n  };\n\n  useEffect(() => {\n    window.addEventListener('pointerup', handlePointerUp);\n\n    return () => {\n      window.removeEventListener('pointerup', handlePointerUp);\n    }\n  }, []);\n\n\n\n  return (\n    <div\n      onPointerDown={handlePointerDown}\n      onPointerMove={handlePointerMove}\n      style={style}\n      className={className}\n    >\n      {children}\n    </div>\n  );\n}\n\nconst {\n    onPointerDown,\n    onPointerUp,\n    onPointerMove,\n    onDragMove,\n    children,\n    style,\n    className,\n  } = props;"]},"metadata":{},"sourceType":"module"}