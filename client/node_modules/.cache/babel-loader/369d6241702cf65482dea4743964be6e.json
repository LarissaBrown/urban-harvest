{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Harvest from './Harvest';\nimport { HarvestContext } from '../context/HarvestProvider';\nimport { v4 } from 'uuid';\nimport Grid from '@material-ui/core/Grid';\nimport DragMove from \"./DragMove\";\n\nfunction FarmerHarvestList() {\n  _s();\n\n  const {\n    harvests,\n    getAllHarvests\n  } = useContext(HarvestContext);\n  const [translate, setTranslate] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    getAllHarvests();\n  }, []);\n\n  const handleDragMove = e => {\n    setTranslate({\n      x: translate.x + e.movementX,\n      y: translate.y + e.movementY\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragMove, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        transform: `translateX(${translate.x}px) translateY(${translate.y}px)`\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        sm: 5,\n        className: \"myHarvestMap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"myHarvestText\",\n          children: \"My Harvests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: \"myHarvestList\",\n          children: harvests.map(harvest => /*#__PURE__*/_jsxDEV(Harvest, {\n            title: harvest.title,\n            image: harvest.harvestImg,\n            label: harvest.body,\n            farmer: harvest.userHandle\n          }, v4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 46\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FarmerHarvestList, \"keH4Dz5riQsnVJBVac5VG9cs/1Q=\");\n\n_c = FarmerHarvestList;\nexport default FarmerHarvestList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerHarvestList\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestList.js"],"names":["React","useContext","useEffect","useState","Harvest","HarvestContext","v4","Grid","DragMove","FarmerHarvestList","harvests","getAllHarvests","translate","setTranslate","x","y","handleDragMove","e","movementX","movementY","transform","map","harvest","title","harvestImg","body","userHandle"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,cAAR,QAA6B,4BAA7B;AACA,SAAQC,EAAR,QAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAOA,SAASC,iBAAT,GAA6B;AAAA;;AAEzB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA8BV,UAAU,CAACI,cAAD,CAA9C;AAEA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC;AACvCW,IAAAA,CAAC,EAAE,CADoC;AAEvCC,IAAAA,CAAC,EAAE;AAFoC,GAAD,CAA1C;AAKAb,EAAAA,SAAS,CAAC,MAAM;AAEZS,IAAAA,cAAc;AAGjB,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMK,cAAc,GAAIC,CAAD,IAAO;AAC1BJ,IAAAA,YAAY,CAAC;AACXC,MAAAA,CAAC,EAAEF,SAAS,CAACE,CAAV,GAAcG,CAAC,CAACC,SADR;AAEXH,MAAAA,CAAC,EAAEH,SAAS,CAACG,CAAV,GAAcE,CAAC,CAACE;AAFR,KAAD,CAAZ;AAID,GALH;;AAOA,sBAEI,QAAC,QAAD;AAAA,2BACM;AAAK,MAAA,KAAK,EAAE;AACZC,QAAAA,SAAS,EAAG,cAAaR,SAAS,CAACE,CAAE,kBAAiBF,SAAS,CAACG,CAAE;AADtD,OAAZ;AAAA,6BAKF,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,SAAS,EAAC,cAAnC;AAAA,gCACK;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADL,eAEI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,SAAS,EAAC,eAA7B;AAAA,oBACKL,QAAQ,CAACW,GAAT,CAAaC,OAAO,iBAAI,QAAC,OAAD;AAAS,YAAA,KAAK,EAAEA,OAAO,CAACC,KAAxB;AAA+B,YAAA,KAAK,EAAED,OAAO,CAACE,UAA9C;AAA0D,YAAA,KAAK,EAAEF,OAAO,CAACG,IAAzE;AAA+E,YAAA,MAAM,EAAEH,OAAO,CAACI;AAA/F,aACnBpB,EAAE,EADiB;AAAA;AAAA;AAAA;AAAA,kBAAxB;AADL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALE;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkBH;;GAzCQG,iB;;KAAAA,iB;AA2CT,eAAeA,iBAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport Harvest from './Harvest'\nimport {HarvestContext} from '../context/HarvestProvider'\nimport {v4} from 'uuid'\nimport Grid from '@material-ui/core/Grid'\nimport DragMove from \"./DragMove\"\n\n\n\n\n\n\nfunction FarmerHarvestList() {\n\n    const { harvests, getAllHarvests} = useContext(HarvestContext)\n\n    const [translate, setTranslate] = useState({\n        x: 0,\n        y: 0\n      });\n   \n    useEffect(() => {\n\n        getAllHarvests()\n       \n\n    }, []\n    )\n    const handleDragMove = (e) => {\n        setTranslate({\n          x: translate.x + e.movementX,\n          y: translate.y + e.movementY\n        });\n      };\n      \n    return (\n\n        <DragMove>\n              <div style={{\n              transform: `translateX(${translate.x}px) translateY(${translate.y}px)`,\n              \n            }} \n           >\n            <Grid item xs={5} sm={5} className=\"myHarvestMap\">\n                 <h1 className=\"myHarvestText\">My Harvests</h1>\n                <Grid item xs={12} className=\"myHarvestList\">\n                    {harvests.map(harvest => <Harvest title={harvest.title} image={harvest.harvestImg} label={harvest.body} farmer={harvest.userHandle}\n                     key={v4()} />)}\n                </Grid>\n            </Grid>\n            </div>\n        </DragMove>\n    )\n}\n\nexport default FarmerHarvestList"]},"metadata":{},"sourceType":"module"}