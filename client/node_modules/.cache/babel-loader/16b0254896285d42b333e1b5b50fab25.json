{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Unsplash, { toJson } from \"unsplash-js\";\nimport { v4 } from 'uuid';\nimport DragMove from \"./DragMove\"; //import Access_Key from './.env'\n\nexport default function FarmerHarvestPhotos(props) {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const [translate, setTranslate] = useState({\n    x: 0,\n    y: 0\n  });\n  const unsplash = new Unsplash({\n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" //...other fetch options\n    // `fetch` options to be sent with every request\n    //headers: { 'X-Custom-Header': 'foo' },\n\n  }); //syntax for searching photos\n  //search.photos(keyword, page, per_page, filters)\n\n  const searchPhotos = async event => {\n    event.preventDefault();\n    unsplash.search.photos(query).then(toJson).then(json => {\n      setPics(json.results);\n    });\n  }; //searchPhotos(unsplash)\n\n\n  const handleDragMove = e => {\n    setTranslate({\n      x: translate.x + e.movementX,\n      y: translate.y + e.movementY\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragMove, {\n    onDragMove: handleDragMove,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unsplash-App\",\n      style: {\n        transform: `translateX(${translate.x}px) translateY(${translate.y}px)`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unsplash-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"unsplash-title\",\n          children: \"Harvest Image Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"unsplash-form\",\n          onSubmit: searchPhotos,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"unsplash-label\",\n            htmlFor: \"query\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"query\",\n            className: \"unsplash-input\",\n            placeholder: `Try \"carrots\" or \"apples\"`,\n            value: query,\n            onChange: e => setQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"unsplash-button\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-list\",\n          children: pics.map(pic => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"card--image\",\n              alt: pic.alt_description,\n              src: pic.urls.full,\n              width: \"50%\",\n              height: \"50%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, v4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 4\n  }, this);\n}\n\n_s(FarmerHarvestPhotos, \"7aecopogLzzXQpstBRrw2Wftc+k=\");\n\n_c = FarmerHarvestPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerHarvestPhotos\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js"],"names":["React","useState","Unsplash","toJson","v4","DragMove","FarmerHarvestPhotos","props","query","setQuery","pics","setPics","translate","setTranslate","x","y","unsplash","accessKey","searchPhotos","event","preventDefault","search","photos","then","json","results","handleDragMove","e","movementX","movementY","transform","target","value","map","pic","alt_description","urls","full"],"mappings":"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","sourcesContent":["import React, { useState }from 'react'\nimport  Unsplash,{ toJson } from \"unsplash-js\"\nimport {v4} from 'uuid'\nimport DragMove from \"./DragMove\"\n\n\n//import Access_Key from './.env'\n\n\n\nexport default function FarmerHarvestPhotos(props) {\n    const [query, setQuery] = useState(\"\")\n    const [ pics, setPics ] = useState([])\n    const [translate, setTranslate] = useState({\n        x: 0,\n        y: 0\n      });\n    const unsplash = new Unsplash({\n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" \n    //...other fetch options\n     // `fetch` options to be sent with every request\n  //headers: { 'X-Custom-Header': 'foo' },\n    });\n\n  \n    //syntax for searching photos\n    //search.photos(keyword, page, per_page, filters)\n\n    const searchPhotos = async(event) => {\n  event.preventDefault()\n\n   unsplash.search\n   .photos(query)\n   .then((toJson))\n   .then((json) => {\n       setPics(json.results)\n   })\n    };\n    //searchPhotos(unsplash)\n\n   \n    \n      const handleDragMove = (e) => {\n        setTranslate({\n          x: translate.x + e.movementX,\n          y: translate.y + e.movementY\n        });\n      };\n    \n    \n    return(\n   <DragMove onDragMove={handleDragMove}>\n    <div className='unsplash-App'style={{\n              transform: `translateX(${translate.x}px) translateY(${translate.y}px)`\n            }} >\n        <div className=\"unsplash-container\" >\n            <h1 className=\"unsplash-title\">Harvest Image Search</h1>\n\n        <form className=\"unsplash-form\" onSubmit={searchPhotos}> \n            <label className=\"unsplash-label\" htmlFor=\"query\"> \n            {\" \"}\n            </label>\n            <input\n            type=\"text\"\n            name=\"query\"\n            className=\"unsplash-input\"\n            placeholder={`Try \"carrots\" or \"apples\"`}\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            />\n            <button type=\"submit\" className=\"unsplash-button\">\n            <p>Search</p>\n            </button>\n        </form>\n        <div className=\"card-list\">\n          {\n          pics.map((pic) => \n            <div key={v4()} className=\"card\">\n                <img\n                    className=\"card--image\"\n                    alt={pic.alt_description}\n                    src={pic.urls.full}\n                    width=\"50%\"\n                    height=\"50%\"\n                ></img>\n            </div>)\n          }\n        </div>\n        </div>\n    </div>\n   </DragMove>      \n   \n  );\n}\n   "]},"metadata":{},"sourceType":"module"}