{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Unsplash, { toJson } from \"unsplash-js\"; //import Access_Key from './.env'\n\nexport default function FarmerHarvestPhotos() {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const unsplash = new Unsplash({\n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" //...other fetch options\n    // `fetch` options to be sent with every request\n    //headers: { 'X-Custom-Header': 'foo' },\n\n  }); //syntax for searching photos\n  //search.photos(keyword, page, per_page, filters)\n\n  const searchPhotos = async event => {\n    event.preventDefault();\n    unsplash.search.photos(query).then(toJson).then(json => {\n      setPics(json.results);\n    });\n  }; //searchPhotos(unsplash)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"unsplash-form\",\n      onSubmit: searchPhotos,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"unsplash-label\",\n        htmlFor: \"query\",\n        children: [\" \", \"\\uD83D\\uDCF7\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"query\",\n        className: \"unsplash-input\",\n        placeholder: `Try \"carrots\" or \"apples\"`,\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"unsplash-button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-list\",\n      children: pics.map(pic => pic.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FarmerHarvestPhotos, \"3A59LxDhw+HpdF/9hHUDEa0JEwY=\");\n\n_c = FarmerHarvestPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerHarvestPhotos\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js"],"names":["React","useState","Unsplash","toJson","FarmerHarvestPhotos","query","setQuery","pics","setPics","unsplash","accessKey","searchPhotos","event","preventDefault","search","photos","then","json","results","e","target","value","map","pic","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAQC,QAAR,IAAmBC,MAAnB,QAAiC,aAAjC,C,CACA;;AAOA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEM,IAAF,EAAQC,OAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAGA,QAAMQ,QAAQ,GAAG,IAAIP,QAAJ,CAAa;AAC1BQ,IAAAA,SAAS,EAAE,6CADe,CAE1B;AACC;AACH;;AAJ4B,GAAb,CAAjB,CAL8C,CAa9C;AACA;;AAEA,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAgB;AACnCA,IAAAA,KAAK,CAACC,cAAN;AAECJ,IAAAA,QAAQ,CAACK,MAAT,CACCC,MADD,CACQV,KADR,EAECW,IAFD,CAEOb,MAFP,EAGCa,IAHD,CAGOC,IAAD,IAAU;AACZT,MAAAA,OAAO,CAACS,IAAI,CAACC,OAAN,CAAP;AACH,KALD;AAMA,GATH,CAhB8C,CA0B9C;;;AAEA,sBAEI;AAAA,4BAEE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,QAAQ,EAAEP,YAA1C;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAkC,QAAA,OAAO,EAAC,OAA1C;AAAA,mBACG,GADH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,SAAS,EAAC,gBAHZ;AAIE,QAAA,WAAW,EAAG,2BAJhB;AAKE,QAAA,KAAK,EAAEN,KALT;AAME,QAAA,QAAQ,EAAGc,CAAD,IAAOb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAN3B;AAAA;AAAA;AAAA;AAAA,cALF,eAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAmBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAEId,IAAI,CAACe,GAAL,CAAUC,GAAD,IAASA,GAAG,CAACC,EAAtB;AAFJ;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA,kBAFJ;AA2BC;;GAvDuBpB,mB;;KAAAA,mB","sourcesContent":["import React, { useState }from 'react'\nimport  Unsplash,{ toJson } from \"unsplash-js\"\n//import Access_Key from './.env'\n\n\n\n\n\n\nexport default function FarmerHarvestPhotos() {\nconst [query, setQuery] = useState(\"\")\nconst [ pics, setPics ] = useState([])\n\n\nconst unsplash = new Unsplash({\n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" \n    //...other fetch options\n     // `fetch` options to be sent with every request\n  //headers: { 'X-Custom-Header': 'foo' },\n  });\n\n  \n//syntax for searching photos\n//search.photos(keyword, page, per_page, filters)\n\nconst searchPhotos = async(event) => {\n  event.preventDefault()\n\n   unsplash.search\n   .photos(query)\n   .then((toJson))\n   .then((json) => {\n       setPics(json.results)\n   })\n  };\n//searchPhotos(unsplash)\n\nreturn(\n\n    <>\n\n      <form className=\"unsplash-form\" onSubmit={searchPhotos}> \n        <label className=\"unsplash-label\" htmlFor=\"query\"> \n          {\" \"}\n          ðŸ“·\n        </label>\n        <input\n          type=\"text\"\n          name=\"query\"\n          className=\"unsplash-input\"\n          placeholder={`Try \"carrots\" or \"apples\"`}\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <button type=\"submit\" className=\"unsplash-button\">\n          Search\n        </button>\n      </form>\n      <div className=\"card-list\">\n          {\n          pics.map((pic) => pic.id)}\n      </div>\n    </>\n  );\n}\n   "]},"metadata":{},"sourceType":"module"}