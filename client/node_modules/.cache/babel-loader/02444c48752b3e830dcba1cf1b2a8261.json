{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport Harvest from './Harvest';\nimport { HarvestContext } from '../context/HarvestProvider';\nimport { v4 } from 'uuid';\nimport Grid from '@material-ui/core/Grid';\n\nfunction FarmerHarvestList(props) {\n  _s();\n\n  const {\n    harvests,\n    getAllHarvests\n  } = useContext(HarvestContext);\n  const [mouseDown, setMouseDown] = useState(false);\n  const {\n    myHarvestIsClicked\n  } = props;\n  const panelRef = useRef(null);\n\n  function handleDrag(movementX, movementY) {\n    const panel = panelRef.current;\n    if (!panel) return;\n    const {\n      x,\n      y\n    } = panel.getBoundingClientRect();\n    panel.style.left = `${x + movementX}px`;\n    panel.style.top = `${y + movementY}px`;\n  }\n\n  const handleMouseDown = () => setMouseDown(true);\n\n  useEffect(() => {\n    const handleMouseUp = () => setMouseDown(false);\n\n    window.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      window.addEventListener('mouseup', handleMouseUp);\n    };\n  }, []);\n  useEffect(() => {\n    const handleMouseMove = e => handleDrag(e.movementX, e.movementY);\n\n    if (mouseDown) {\n      window.addEventListener('mousemove', handleMouseMove);\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [mouseDown, handleDrag]);\n  useEffect(() => {\n    getAllHarvests();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: \"panel_container\",\n      onMouseDown: handleMouseDown // style={!myHarvestIsClicked\n      //   ? \n      // {visibility: \"visible\", position: 'absolute'} \n      //   :\n      // {visibility: \"hidden\", position: 'absolute'}}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"myHarvestText\",\n        children: \"My Harvests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: \"myHarvestList\",\n        children: harvests.map(harvest => /*#__PURE__*/_jsxDEV(Harvest, {\n          title: harvest.title,\n          image: harvest.harvestImg,\n          label: harvest.body,\n          farmer: harvest.userHandle\n        }, v4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 31\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(FarmerHarvestList, \"L2znZU8fcEavJ+KJ/m61E1koRkg=\");\n\n_c = FarmerHarvestList;\nexport default FarmerHarvestList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerHarvestList\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestList.js"],"names":["React","useContext","useEffect","useState","useRef","Harvest","HarvestContext","v4","Grid","FarmerHarvestList","props","harvests","getAllHarvests","mouseDown","setMouseDown","myHarvestIsClicked","panelRef","handleDrag","movementX","movementY","panel","current","x","y","getBoundingClientRect","style","left","top","handleMouseDown","handleMouseUp","window","addEventListener","handleMouseMove","e","removeEventListener","map","harvest","title","harvestImg","body","userHandle"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react'\nimport Harvest from './Harvest'\nimport {HarvestContext} from '../context/HarvestProvider'\nimport {v4} from 'uuid'\nimport Grid from '@material-ui/core/Grid'\n\nfunction FarmerHarvestList(props) {\n\n    const { harvests, getAllHarvests} = useContext(HarvestContext)\n    const [ mouseDown, setMouseDown ] = useState(false)\n  \n    const {myHarvestIsClicked } = props\n\n\n    const panelRef = useRef(null)\n   \n\n    function handleDrag(movementX, movementY){\n         const panel = panelRef.current\n         if(!panel) return\n         \n         const { x, y } = panel.getBoundingClientRect()\n \n         panel.style.left = `${x + movementX}px`\n         panel.style.top = `${y + movementY}px`\n     }\n\n    const handleMouseDown = () => setMouseDown(true)\n\n    \n      useEffect(() => {\n        const handleMouseUp = () => setMouseDown(false)\n        window.addEventListener('mouseup', handleMouseUp)\n        return () => {\n        window.addEventListener('mouseup', handleMouseUp)\n        }\n      }, [])\n\n      useEffect(() => {\n        const handleMouseMove = (e) => handleDrag(e.movementX, e.movementY)\n  \n        if(mouseDown) {\n          window.addEventListener('mousemove', handleMouseMove)\n        }\n        return () => {\n          window.removeEventListener('mousemove',  handleMouseMove)\n        }\n      }, [mouseDown, handleDrag])\n     \n  \n    useEffect(() => {\n\n        getAllHarvests()\n       \n\n    }, []\n    )\n \n\n    return (\n      <>\n            <Grid className=\"panel_container\" onMouseDown={handleMouseDown} \n                  // style={!myHarvestIsClicked\n                  //   ? \n                  // {visibility: \"visible\", position: 'absolute'} \n                  //   :\n                  // {visibility: \"hidden\", position: 'absolute'}}\n            >\n                 <h1 className=\"myHarvestText\">My Harvests</h1>\n                <Grid item xs={12} className=\"myHarvestList\">\n                    {harvests.map(harvest => \n                              <Harvest \n                                  title={harvest.title} \n                                  image={harvest.harvestImg} \n                                  label={harvest.body} \n                                  farmer={harvest.userHandle}\n                                  key={v4()} \n                              />)\n                    }\n                </Grid>\n            </Grid>\n        </>\n\n    )\n}\n\nexport default FarmerHarvestList"]},"metadata":{},"sourceType":"module"}