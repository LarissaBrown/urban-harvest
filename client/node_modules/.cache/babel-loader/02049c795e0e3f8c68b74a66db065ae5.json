{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Unsplash, { toJson } from \"unsplash-js\";\nimport DragMove from \"./DragMove.js\"; //import Access_Key from './.env'\n\nexport default function FarmerHarvestPhotos(props) {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const {\n    onPointerDown,\n    onPointerUp,\n    onPointerMove,\n    onDragMove,\n    children,\n    style,\n    className\n  } = props;\n  const unsplash = new Unsplash({\n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" //...other fetch options\n    // `fetch` options to be sent with every request\n    //headers: { 'X-Custom-Header': 'foo' },\n\n  }); //syntax for searching photos\n  //search.photos(keyword, page, per_page, filters)\n\n  const searchPhotos = async event => {\n    event.preventDefault();\n    unsplash.search.photos(query).then(toJson).then(json => {\n      setPics(json.results);\n    });\n  }; //searchPhotos(unsplash)\n\n\n  DragMove.propTypes = {\n    onDragMove: func.isRequired,\n    onPointerDown: func,\n    onPointerUp: func,\n    onPointerMove: func,\n    children: element,\n    style: shape({}),\n    className: string\n  };\n  DragMove.defaultProps = {\n    onPointerDown: () => {},\n    onPointerUp: () => {},\n    onPointerMove: () => {}\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DragMove, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unsplash-App\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"unsplash-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"unsplash-title\",\n            children: \"Harvest Image Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"unsplash-form\",\n            onSubmit: searchPhotos,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"unsplash-label\",\n              htmlFor: \"query\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"query\",\n              className: \"unsplash-input\",\n              placeholder: `Try \"carrots\" or \"apples\"`,\n              value: query,\n              onChange: e => setQuery(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"unsplash-button\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-list\",\n            children: pics.map(pic => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"card--image\",\n                alt: pic.alt_description,\n                src: pic.urls.full,\n                width: \"50%\",\n                height: \"50%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(FarmerHarvestPhotos, \"3A59LxDhw+HpdF/9hHUDEa0JEwY=\");\n\n_c = FarmerHarvestPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerHarvestPhotos\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js"],"names":["React","useState","Unsplash","toJson","DragMove","FarmerHarvestPhotos","props","query","setQuery","pics","setPics","onPointerDown","onPointerUp","onPointerMove","onDragMove","children","style","className","unsplash","accessKey","searchPhotos","event","preventDefault","search","photos","then","json","results","propTypes","func","isRequired","element","shape","string","defaultProps","e","target","value","map","pic","alt_description","urls","full"],"mappings":"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","sourcesContent":["import React, { useState }from 'react'\nimport  Unsplash,{ toJson } from \"unsplash-js\"\nimport DragMove from \"./DragMove.js\"\n\n//import Access_Key from './.env'\n\n\n\nexport default function FarmerHarvestPhotos(props) {\n    const [query, setQuery] = useState(\"\")\n    const [ pics, setPics ] = useState([])\n\n    const {\n        onPointerDown,\n        onPointerUp,\n        onPointerMove,\n        onDragMove,\n        children,\n        style,\n        className,\n      } = props;\n    const unsplash = new Unsplash({\n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" \n    //...other fetch options\n     // `fetch` options to be sent with every request\n  //headers: { 'X-Custom-Header': 'foo' },\n  });\n\n  \n    //syntax for searching photos\n    //search.photos(keyword, page, per_page, filters)\n\n    const searchPhotos = async(event) => {\n  event.preventDefault()\n\n   unsplash.search\n   .photos(query)\n   .then((toJson))\n   .then((json) => {\n       setPics(json.results)\n   })\n    };\n    //searchPhotos(unsplash)\n\n\n\n\n      DragMove.propTypes = {\n        onDragMove: func.isRequired,\n        onPointerDown: func,\n        onPointerUp: func,\n        onPointerMove: func,\n        children: element,\n        style: shape({}),\n        className: string,\n      }\n      \n      DragMove.defaultProps = {\n        onPointerDown: () => {},\n        onPointerUp: () => {},\n        onPointerMove: () => {},\n      };\n    \n    \n    return(\n    <>\n    <DragMove>\n    <div className=\"unsplash-App\" >\n        <div className=\"unsplash-container\" >\n            <h1 className=\"unsplash-title\">Harvest Image Search</h1>\n\n        <form className=\"unsplash-form\" onSubmit={searchPhotos}> \n            <label className=\"unsplash-label\" htmlFor=\"query\"> \n            {\" \"}\n            </label>\n            <input\n            type=\"text\"\n            name=\"query\"\n            className=\"unsplash-input\"\n            placeholder={`Try \"carrots\" or \"apples\"`}\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            />\n            <button type=\"submit\" className=\"unsplash-button\">\n            Search\n            </button>\n        </form>\n        <div className=\"card-list\">\n          {\n          pics.map((pic) => \n            <div className=\"card\">\n                <img\n                    className=\"card--image\"\n                    alt={pic.alt_description}\n                    src={pic.urls.full}\n                    width=\"50%\"\n                    height=\"50%\"\n                ></img>\n            </div>)\n          }\n        </div>\n        </div>\n    </div>\n    </DragMove>\n    </>\n  );\n}\n   "]},"metadata":{},"sourceType":"module"}