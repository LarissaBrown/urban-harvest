{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport Harvest from './Harvest';\nimport { HarvestContext } from '../context/HarvestProvider';\nimport { v4 } from 'uuid';\nimport Panel from './Panel/Panel';\nimport PanelHeader from './PanelHeader';\nimport { Direction } from './Panel/constants';\nimport Resizer from './Panel/Resizer';\n\nfunction FarmerHarvestList() {\n  _s();\n\n  const {\n    harvests,\n    getAllHarvests\n  } = useContext(HarvestContext);\n  const panelRef = useRef(null);\n  const [isClicked, setIsClicked] = useState(true);\n  useEffect(() => {\n    getAllHarvests();\n  }, []);\n\n  const handleDrag = (movementX, movementY) => {\n    const panel = panelRef.current;\n    if (!panel) return;\n    const {\n      x,\n      y\n    } = panel.getBoundingClientRect();\n    panel.style.left = `${x + movementX}px`;\n    panel.style.top = `${y + movementY}px`;\n  };\n\n  const handleResize = (direction, movementX, movementY) => {\n    console.log(direction, movementX, movementY);\n    const panel = panelRef.current;\n    if (!panel) return;\n    const {\n      width,\n      height,\n      x,\n      y\n    } = panel.getBoundingClientRect();\n\n    const resizeTop = () => {\n      panel.style.height = `${height - movementY}px`;\n      panel.style.top = `${y + movementY}px`;\n    };\n\n    const resizeRight = () => {\n      panel.style.width = `${width - movementX}px`;\n    };\n\n    const resizeBottom = () => {\n      panel.style.height = `${height - movementY}px`;\n    };\n\n    const resizeLeft = () => {\n      panel.style.width = `${width - movementX}px`;\n      panel.style.left = `${x + movementX}px`;\n    };\n\n    switch (direction) {\n      case Direction.TopLeft:\n        resizeTop();\n        resizeLeft();\n        break;\n\n      case Direction.Top:\n        resizeTop();\n        break;\n\n      case Direction.TopRight:\n        resizeTop();\n        resizeRight();\n        break;\n\n      case Direction.Right:\n        resizeRight();\n        break;\n\n      case Direction.BottomRight:\n        resizeBottom();\n        resizeRight();\n        break;\n\n      case Direction.Bottom:\n        resizeBottom();\n        break;\n\n      case Direction.BottomLeft:\n        resizeBottom();\n        resizeLeft();\n        break;\n\n      case Direction.Left:\n        resizeLeft();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: isClicked ? {\n        visibility: \"visible\"\n      } : {\n        visibility: \"hidden\"\n      },\n      className: \"farmerHarvest-App\",\n      children: /*#__PURE__*/_jsxDEV(Panel, {\n        children: [/*#__PURE__*/_jsxDEV(Resizer, {\n          onResize: handleResize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(PanelHeader, {\n          handleDrag: handleDrag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"myHarvestText\",\n          children: \"My Harvests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          item: true,\n          xs: 12,\n          className: \"myHarvestList\",\n          children: harvests.map(harvest => /*#__PURE__*/_jsxDEV(Harvest, {\n            title: harvest.title,\n            image: harvest.harvestImg,\n            label: harvest.body,\n            farmer: harvest.userHandle\n          }, v4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n\n_s(FarmerHarvestList, \"9yXebIEGoi3aytxNlPi8nZ1SLHo=\");\n\n_c = FarmerHarvestList;\nexport default FarmerHarvestList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerHarvestList\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestList.js"],"names":["React","useContext","useEffect","useState","useRef","Harvest","HarvestContext","v4","Panel","PanelHeader","Direction","Resizer","FarmerHarvestList","harvests","getAllHarvests","panelRef","isClicked","setIsClicked","handleDrag","movementX","movementY","panel","current","x","y","getBoundingClientRect","style","left","top","handleResize","direction","console","log","width","height","resizeTop","resizeRight","resizeBottom","resizeLeft","TopLeft","Top","TopRight","Right","BottomRight","Bottom","BottomLeft","Left","visibility","map","harvest","title","harvestImg","body","userHandle"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react'\nimport Harvest from './Harvest'\nimport {HarvestContext} from '../context/HarvestProvider'\nimport {v4} from 'uuid'\nimport Panel from './Panel/Panel'\nimport PanelHeader from './PanelHeader'\nimport { Direction } from './Panel/constants'\nimport Resizer from './Panel/Resizer'\n\n\nfunction FarmerHarvestList() {\n\n    const { harvests, getAllHarvests} = useContext(HarvestContext)\n    \n    const panelRef = useRef(null)\n    const [isClicked, setIsClicked]= useState(true)\n    useEffect(() => {\n\n      getAllHarvests()\n     \n\n  }, []\n  )\n    const handleDrag = (movementX, movementY) => {\n         const panel = panelRef.current\n        \n         if(!panel)  return\n        \n        \n         const { x, y } = panel.getBoundingClientRect()\n            \n         panel.style.left = `${x + movementX}px`\n         panel.style.top = `${y + movementY}px`\n         \n     }\n     \n     const handleResize = (direction, movementX, movementY)=> {\n         console.log(direction, movementX, movementY)\n \n         const panel = panelRef.current\n\n\n     \n         \n         if(!panel) return\n       \n         const { width, height, x, y } = panel.getBoundingClientRect()\n \n         const resizeTop = () => {\n             panel.style.height = `${height - movementY}px`\n             panel.style.top = `${y + movementY}px`\n \n         }\n         const resizeRight = () => {\n             panel.style.width = `${width - movementX}px`\n             \n         }\n         const resizeBottom = () => {\n             panel.style.height = `${height - movementY}px`\n             \n         }\n         const resizeLeft = () => {\n             panel.style.width = `${width - movementX}px`\n             panel.style.left = `${x + movementX}px`\n             \n         }\n         switch (direction){\n             case Direction.TopLeft:\n                 resizeTop();\n                 resizeLeft();\n                 break;\n             \n             case Direction.Top:\n                 resizeTop();\n                 break;\n \n             case Direction.TopRight:\n                 resizeTop();\n                 resizeRight();\n                 break;\n \n             case Direction.Right:\n                 resizeRight();\n                 break;\n \n             case Direction.BottomRight:\n                 resizeBottom();\n                 resizeRight();\n                 break;\n \n             case Direction.Bottom:\n                 resizeBottom();\n                 break;\n \n             case Direction.BottomLeft:\n                 resizeBottom();\n                 resizeLeft();\n                 break;\n \n             case Direction.Left:\n                 resizeLeft();\n                 break;\n \n             default:\n                 break;\n \n         }\n\n        }\n\n    return (\n      <>\n       <div \n                  style={isClicked \n                    ? \n                  {visibility: \"visible\"} \n                    :\n                  {visibility: \"hidden\"}}\n            \n       className=\"farmerHarvest-App\">\n              <Panel>\n              <Resizer onResize={handleResize}/> \n              <PanelHeader  handleDrag={handleDrag}/>\n                <h1 className=\"myHarvestText\">My Harvests</h1>\n                <div item xs={12} className=\"myHarvestList\">\n                    {harvests.map(harvest => \n                              <Harvest \n                                  title={harvest.title} \n                                  image={harvest.harvestImg} \n                                  label={harvest.body} \n                                  farmer={harvest.userHandle}\n                                  key={v4()} \n                              />)\n                    }\n                </div>\n                </Panel>\n        </div>\n        \n        </>\n\n    )\n}\n\nexport default FarmerHarvestList"]},"metadata":{},"sourceType":"module"}