{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Harvest from './Harvest';\nimport { HarvestContext } from '../context/HarvestProvider';\nimport { v4 } from 'uuid';\nimport Grid from '@material-ui/core/Grid';\nimport Panel from \"./Panel/Panel\";\n\nfunction FarmerHarvestList(props) {\n  _s();\n\n  const {\n    harvests,\n    getAllHarvests\n  } = useContext(HarvestContext);\n  const [mouseDown, setMouseDown] = useState(false);\n  const {\n    isClicked,\n    onDrag\n  } = props;\n  useEffect(() => {\n    const handleMouseUp = () => setMouseDown(false);\n\n    window.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      window.addEventListener('mouseup', handleMouseUp);\n    };\n  }, []);\n  useEffect(() => {\n    const handleMouseMove = e => onDrag(e.movementX, e.movementY);\n\n    if (mouseDown) {\n      window.addEventListener('mousemove', handleMouseMove);\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [mouseDown, onDrag]);\n\n  const handleMouseDown = () => setMouseDown(true);\n\n  useEffect(() => {\n    getAllHarvests();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onDrag: onDrag,\n      onMouseDown: handleMouseDown,\n      className: \"panel_container\",\n      onClick: () => setIsClicked(!isClicked),\n      style: isClicked ? {\n        visibility: \"visible\",\n        position: 'absolute'\n      } : {\n        visibility: \"hidden\",\n        position: 'absolute'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        sm: 5,\n        className: \"myHarvestMap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"myHarvestText\",\n          children: \"My Harvests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: \"myHarvestList\",\n          children: harvests.map(harvest => /*#__PURE__*/_jsxDEV(Harvest, {\n            title: harvest.title,\n            image: harvest.harvestImg,\n            label: harvest.body,\n            farmer: harvest.userHandle\n          }, v4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 46\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FarmerHarvestList, \"OgJox3t307nodo4kBjYLhq1h9EA=\");\n\n_c = FarmerHarvestList;\nexport default FarmerHarvestList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerHarvestList\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestList.js"],"names":["React","useContext","useEffect","useState","Harvest","HarvestContext","v4","Grid","Panel","FarmerHarvestList","props","harvests","getAllHarvests","mouseDown","setMouseDown","isClicked","onDrag","handleMouseUp","window","addEventListener","handleMouseMove","e","movementX","movementY","removeEventListener","handleMouseDown","setIsClicked","visibility","position","map","harvest","title","harvestImg","body","userHandle"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport Harvest from './Harvest'\nimport {HarvestContext} from '../context/HarvestProvider'\nimport {v4} from 'uuid'\nimport Grid from '@material-ui/core/Grid'\nimport Panel from \"./Panel/Panel\"\n\n\n\n\n\n\nfunction FarmerHarvestList(props) {\n\n    const { harvests, getAllHarvests} = useContext(HarvestContext)\n    const [ mouseDown, setMouseDown ] = useState(false)\n\n    \n   \n      const {isClicked, onDrag} = props\n   \n      useEffect(() => {\n        const handleMouseUp = () => setMouseDown(false)\n        window.addEventListener('mouseup', handleMouseUp)\n        return () => {\n        window.addEventListener('mouseup', handleMouseUp)\n        }\n      }, [])\n  \n      useEffect(() => {\n        const handleMouseMove = (e) => onDrag(e.movementX, e.movementY)\n  \n        if(mouseDown) {\n          window.addEventListener('mousemove', handleMouseMove)\n        }\n        return () => {\n          window.removeEventListener('mousemove',  handleMouseMove)\n        }\n      }, [mouseDown, onDrag])\n      const handleMouseDown = () => setMouseDown(true)\n  \n    useEffect(() => {\n\n        getAllHarvests()\n       \n\n    }, []\n    )\n \n\n    return (\n        <Panel>\n          <div onDrag={onDrag} onMouseDown={handleMouseDown} className=\"panel_container\" \n           onClick={()=> setIsClicked(!isClicked)}style={isClicked\n         ? \n         {visibility: \"visible\", position: 'absolute'} \n         :\n          {visibility: \"hidden\", position: 'absolute'}}>\n            <Grid item xs={5} sm={5} className=\"myHarvestMap\">\n                 <h1 className=\"myHarvestText\">My Harvests</h1>\n                <Grid item xs={12} className=\"myHarvestList\">\n                    {harvests.map(harvest => <Harvest title={harvest.title} image={harvest.harvestImg} label={harvest.body} farmer={harvest.userHandle}\n                     key={v4()} />)}\n                </Grid>\n            </Grid>\n            </div>\n        </Panel>\n\n    )\n}\n\nexport default FarmerHarvestList"]},"metadata":{},"sourceType":"module"}