{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport Unsplash, { toJson } from \"unsplash-js\";\nimport { v4 } from 'uuid';\nimport Panel from './Panel/Panel';\nimport { HarvestContext } from '../context/HarvestProvider'; //import DragMove from \"./DragMove\"\n//import Resizer from \"./Panel/Resizer\"\n//import Access_Key from './.env'\n\nexport default function FarmerHarvestPhotos(props) {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const {\n    isClicked\n  } = useContext(HarvestContext);\n  const unsplash = new Unsplash({\n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" //...other fetch options\n    // `fetch` options to be sent with every request\n    //headers: { 'X-Custom-Header': 'foo' },\n\n  }); //syntax for searching photos\n  //search.photos(keyword, page, per_page, filters)\n\n  const searchPhotos = async event => {\n    event.preventDefault();\n    unsplash.search.photos(query).then(toJson).then(json => {\n      setPics(json.results);\n    });\n  }; //searchPhotos(unsplash)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unsplash-App\",\n    style: ({\n      color: \"black\"\n    }, isClicked ? {\n      visibility: \"visible\",\n      position: 'absolute'\n    } : {\n      visibility: \"hidden\",\n      position: 'absolute'\n    }),\n    children: [\">\", /*#__PURE__*/_jsxDEV(Panel, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"unsplash-title\",\n        children: \"Harvest Image Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"unsplash-form\",\n        onSubmit: searchPhotos,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"unsplash-label\",\n          htmlFor: \"query\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"query\",\n          className: \"unsplash-input\",\n          placeholder: `Try \"carrots\" or \"apples\"`,\n          value: query,\n          onChange: e => setQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"unsplash-button\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-list\",\n        children: pics.map(pic => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"card--image\",\n            alt: pic.alt_description,\n            src: pic.urls.full,\n            width: \"50%\",\n            height: \"50%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)\n        }, v4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FarmerHarvestPhotos, \"sNH3Rn49oBOqO5vjhmtfzft/rIs=\");\n\n_c = FarmerHarvestPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerHarvestPhotos\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js"],"names":["React","useState","useEffect","useContext","useRef","Unsplash","toJson","v4","Panel","HarvestContext","FarmerHarvestPhotos","props","query","setQuery","pics","setPics","isClicked","unsplash","accessKey","searchPhotos","event","preventDefault","search","photos","then","json","results","color","visibility","position","e","target","value","map","pic","alt_description","urls","full"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef}from 'react'\nimport  Unsplash,{ toJson } from \"unsplash-js\"\nimport {v4} from 'uuid'\nimport Panel from './Panel/Panel'\nimport {HarvestContext} from '../context/HarvestProvider'\n\n//import DragMove from \"./DragMove\"\n//import Resizer from \"./Panel/Resizer\"\n//import Access_Key from './.env'\n\n\nexport default function FarmerHarvestPhotos(props) {\n    const [query, setQuery] = useState(\"\")\n    const [ pics, setPics ] = useState([])\n    const {isClicked} = useContext(HarvestContext)\n    \n\n\n    const unsplash = new Unsplash({\n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" \n    //...other fetch options\n     // `fetch` options to be sent with every request\n    //headers: { 'X-Custom-Header': 'foo' },\n    });\n\n  \n    //syntax for searching photos\n    //search.photos(keyword, page, per_page, filters)\n\n    const searchPhotos = async(event) => {\n        event.preventDefault()\n\n        unsplash.search\n        .photos(query)\n        .then((toJson))\n        .then((json) => {\n            setPics(json.results)\n        })\n    };\n\n\n    //searchPhotos(unsplash)\n    \n    \n    return(\n      <div className='unsplash-App'style={{color: \"black\"}, isClicked\n      ? \n      {visibility: \"visible\", position: 'absolute'} \n      :\n       {visibility: \"hidden\", position: 'absolute'}}>>\n  <Panel > \n      \n     \n         \n       \n            <h1 className=\"unsplash-title\">Harvest Image Search</h1>\n\n        <form className=\"unsplash-form\" onSubmit={searchPhotos}> \n            <label className=\"unsplash-label\" htmlFor=\"query\"> \n            {\" \"}\n            </label>\n            <input\n            type=\"text\"\n            name=\"query\"\n            className=\"unsplash-input\"\n            placeholder={`Try \"carrots\" or \"apples\"`}\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            />\n            <button type=\"submit\" className=\"unsplash-button\">\n            <p>Search</p>\n            </button>\n        </form>\n        <div className=\"card-list\" >\n          {\n          pics.map((pic) => \n            <div key={v4()} className=\"card\">\n                <img\n                    className=\"card--image\"\n                    alt={pic.alt_description}\n                    src={pic.urls.full}\n                    width=\"50%\"\n                    height=\"50%\"\n                ></img>\n            </div>)\n          }\n        </div>\n        \n     \n\n </Panel>\n \n  </div> \n   \n  );\n}\n   "]},"metadata":{},"sourceType":"module"}