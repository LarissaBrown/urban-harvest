{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport emailjs from 'emailjs-com';\nexport default function Contact(props) {\n  _s();\n\n  const {\n    farmer,\n    onClick\n  } = props; //when you click on image a contact form will show up that is connected to js email and the farmer will be contacted. \n  //idea: have a verbal recording that can be done to attach to the contact email for the user to leave a voice message. \n\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n\n  const handleChange = name => e => {\n    setValues({ ...values,\n      [e.target.id]: e.target.value\n    });\n  };\n\n  console.log;\n\n  window.onload = function () {\n    document.getElementById('contact_form').addEventListener('submit', function (event) {\n      event.preventDefault(); // generate a five digit number for the contact_number variable\n\n      this.contact_number.value = Math.random() * 100000 | 0; // these IDs from the previous steps\n\n      emailjs.sendForm('user_oQB8bFJjV5Vpe', 'contact_form', this).then(function () {\n        console.log('SUCCESS!');\n      }, function (error) {\n        console.log('FAILED...', error);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"contact_form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"hidden\",\n        id: \"contact_number\",\n        name: \"contact_number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        id: \"user_name\",\n        type: \"text\",\n        name: \"user_name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        id: \"user_email\",\n        type: \"email\",\n        name: \"user_email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: handleChange,\n        id: \"message\",\n        name: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          margin: 0\n        },\n        onClick: onClick,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Contact: \", farmer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n}\n\n_s(Contact, \"mdeZqVlzI+HUiYXlHOrvZefR5VM=\");\n\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/Contact.js"],"names":["React","useState","emailjs","Contact","props","farmer","onClick","values","setValues","name","email","message","handleChange","e","target","id","value","console","log","window","onload","document","getElementById","addEventListener","event","preventDefault","contact_number","Math","random","sendForm","then","error","margin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport emailjs from 'emailjs-com'\n\n\n\nexport default function Contact (props){\n    \n\nconst {farmer, onClick} = props\n//when you click on image a contact form will show up that is connected to js email and the farmer will be contacted. \n//idea: have a verbal recording that can be done to attach to the contact email for the user to leave a voice message. \nconst [values, setValues] = useState({\n    name: '',\n    email: '',\n    message: '',\n});\nconst handleChange = (name)=> (e) => {\n    \n    setValues({ ...values, [e.target.id]: e.target.value });\n};\nconsole.log\nwindow.onload = function() {\n  document.getElementById('contact_form').addEventListener('submit', function(event) {\n    event.preventDefault();\n    // generate a five digit number for the contact_number variable\n    this.contact_number.value = Math.random() * 100000 | 0;\n    // these IDs from the previous steps\n    emailjs.sendForm('user_oQB8bFJjV5Vpe', 'contact_form', this)\n      .then(function() {\n        console.log('SUCCESS!');\n        \n      }, function(error) {\n        console.log('FAILED...', error);\n      });\n  });\n}\n\n\n\n\n    return (\n        \n            <>\n                    <form id=\"contact_form\">\n\t\t\t\t\t\t\t\t<input onChange={handleChange} type=\"hidden\" id=\"contact_number\" name=\"contact_number\"/>\n\t\t\t\t\t\t\t\t<label>Name</label>\n                                <br/>\n\t\t\t\t\t\t\t\t<input onChange={handleChange} id=\"user_name\" type=\"text\" name=\"user_name\"/>\n                                <br/>\n\t\t\t\t\t\t\t\t<label>Email</label>\n                                <br/>\n\t\t\t\t\t\t\t\t<input onChange={handleChange} id='user_email' type=\"email\" name=\"user_email\"/>\n                                <br/>\n\t\t\t\t\t\t\t\t<label>Message</label>\n                                <br/>\n\t\t\t\t\t\t\t\t<textarea onChange={handleChange} id=\"message\" name=\"message\"></textarea>\n                                <br/>\n\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"Send\"/>\n                            <button style={{margin: 0}} onClick={onClick}>X</button> \n                        <p >Contact: {farmer}</p>\n\t\t\t\t\t</form>\n\t\t\t</>\n               \n        \n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}