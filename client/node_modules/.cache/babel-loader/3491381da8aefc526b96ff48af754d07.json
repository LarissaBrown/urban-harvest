{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Unsplash, { toJson } from \"unsplash-js\";\nimport { v4 } from 'uuid';\nimport Panel from './Panel/Panel'; //import DragMove from \"./DragMove\"\n//import Resizer from \"./Panel/Resizer\"\n//import Access_Key from './.env'\n\nexport default function FarmerHarvestPhotos(props) {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const [mouseDown, setMouseDown] = useState(false);\n  const {\n    isClicked\n  } = props;\n  const panelRef = useRef();\n\n  const handleDrag = (movementX, movementY) => {\n    const panel = panelRef.current;\n    if (!panel) return;\n    const {\n      x,\n      y\n    } = panel.getBoundingClientRect();\n    panel.style.left = `${x + movementX}px`;\n    panel.style.top = `${y + movementY}px`;\n  };\n\n  useEffect(() => {\n    const handleMouseUp = () => setMouseDown(false);\n\n    window.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      window.addEventListener('mouseup', handleMouseUp);\n    };\n  }, []);\n  useEffect(() => {\n    const handleMouseMove = e => handleDrag(e.movementX, e.movementY);\n\n    if (mouseDown) {\n      window.addEventListener('mousemove', handleMouseMove);\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [mouseDown, handleDrag]);\n\n  const handleMouseDown = () => setMouseDown(true);\n\n  const unsplash = new Unsplash({\n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" //...other fetch options\n    // `fetch` options to be sent with every request\n    //headers: { 'X-Custom-Header': 'foo' },\n\n  }); //syntax for searching photos\n  //search.photos(keyword, page, per_page, filters)\n\n  const searchPhotos = async event => {\n    event.preventDefault();\n    unsplash.search.photos(query).then(toJson).then(json => {\n      setPics(json.results);\n    });\n  }; //searchPhotos(unsplash)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Panel, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseDown: handleMouseDown,\n        className: \"panel_container\",\n        style: isClicked ? {\n          visibility: \"visible\",\n          position: 'absolute'\n        } : {\n          visibility: \"hidden\",\n          position: 'absolute'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"unsplash-App\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"unsplash-title\",\n            children: \"Harvest Image Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"unsplash-form\",\n            onSubmit: searchPhotos,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"unsplash-label\",\n              htmlFor: \"query\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"query\",\n              className: \"unsplash-input\",\n              placeholder: `Try \"carrots\" or \"apples\"`,\n              value: query,\n              onChange: e => setQuery(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"unsplash-button\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-list\",\n            children: pics.map(pic => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"card--image\",\n                alt: pic.alt_description,\n                src: pic.urls.full,\n                width: \"50%\",\n                height: \"50%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, v4(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\n_s(FarmerHarvestPhotos, \"5/YKHx6zt0EsH93KQzisJbZJAjc=\");\n\n_c = FarmerHarvestPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerHarvestPhotos\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js"],"names":["React","useState","useEffect","useRef","Unsplash","toJson","v4","Panel","FarmerHarvestPhotos","props","query","setQuery","pics","setPics","mouseDown","setMouseDown","isClicked","panelRef","handleDrag","movementX","movementY","panel","current","x","y","getBoundingClientRect","style","left","top","handleMouseUp","window","addEventListener","handleMouseMove","e","removeEventListener","handleMouseDown","unsplash","accessKey","searchPhotos","event","preventDefault","search","photos","then","json","results","visibility","position","target","value","map","pic","alt_description","urls","full"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef}from 'react'\nimport  Unsplash,{ toJson } from \"unsplash-js\"\nimport {v4} from 'uuid'\nimport Panel from './Panel/Panel'\n//import DragMove from \"./DragMove\"\n//import Resizer from \"./Panel/Resizer\"\n//import Access_Key from './.env'\n\n\nexport default function FarmerHarvestPhotos(props) {\n    const [query, setQuery] = useState(\"\")\n    const [ pics, setPics ] = useState([])\n    const [ mouseDown, setMouseDown ] = useState(false)\n    const {isClicked} = props\n    const panelRef = useRef()\n\n    const handleDrag = (movementX, movementY)=>{\n      const panel = panelRef.current\n      if(!panel) return\n      \n      const { x, y } = panel.getBoundingClientRect()\n\n      panel.style.left = `${x + movementX}px`\n      panel.style.top = `${y + movementY}px`\n  }\n    useEffect(() => {\n      const handleMouseUp = () => setMouseDown(false)\n      window.addEventListener('mouseup', handleMouseUp)\n      return () => {\n        window.addEventListener('mouseup', handleMouseUp)\n      }\n    }, [])\n\n    useEffect(() => {\n      const handleMouseMove = (e) => handleDrag(e.movementX, e.movementY)\n\n      if(mouseDown) {\n        window.addEventListener('mousemove', handleMouseMove)\n      }\n      return () => {\n        window.removeEventListener('mousemove',  handleMouseMove)\n      }\n    }, [mouseDown, handleDrag])\n\n    const handleMouseDown = () => setMouseDown(true)\n\n\n    const unsplash = new Unsplash({\n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" \n    //...other fetch options\n     // `fetch` options to be sent with every request\n    //headers: { 'X-Custom-Header': 'foo' },\n    });\n\n  \n    //syntax for searching photos\n    //search.photos(keyword, page, per_page, filters)\n\n    const searchPhotos = async(event) => {\n        event.preventDefault()\n\n        unsplash.search\n        .photos(query)\n        .then((toJson))\n        .then((json) => {\n            setPics(json.results)\n        })\n    };\n\n\n    //searchPhotos(unsplash)\n    \n    \n    return(\n      <>\n  <Panel >\n    <div onMouseDown={handleMouseDown} className=\"panel_container\" \n         style={isClicked\n         ? \n         {visibility: \"visible\", position: 'absolute'} \n         :\n          {visibility: \"hidden\", position: 'absolute'}}>\n           \n        <div className='unsplash-App'>\n            <h1 className=\"unsplash-title\">Harvest Image Search</h1>\n\n        <form className=\"unsplash-form\" onSubmit={searchPhotos}> \n            <label className=\"unsplash-label\" htmlFor=\"query\"> \n            {\" \"}\n            </label>\n            <input\n            type=\"text\"\n            name=\"query\"\n            className=\"unsplash-input\"\n            placeholder={`Try \"carrots\" or \"apples\"`}\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            />\n            <button type=\"submit\" className=\"unsplash-button\">\n            <p>Search</p>\n            </button>\n        </form>\n        <div className=\"card-list\" >\n          {\n          pics.map((pic) => \n            <div key={v4()} className=\"card\">\n                <img\n                    className=\"card--image\"\n                    alt={pic.alt_description}\n                    src={pic.urls.full}\n                    width=\"50%\"\n                    height=\"50%\"\n                ></img>\n            </div>)\n          }\n        </div>\n        </div>\n </div>\n  </Panel>   \n  </> \n   \n  );\n}\n   "]},"metadata":{},"sourceType":"module"}