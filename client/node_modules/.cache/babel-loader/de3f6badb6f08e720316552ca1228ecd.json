{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/Panel/Panel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport PanelHeader from '../PanelHeader';\nimport { Direction } from './constants';\nimport Resizer from './Resizer';\n\nconst Panel = ({\n  children\n}) => {\n  _s();\n\n  const panelRef = useRef(null);\n  console.log(panelRef);\n\n  const handleDrag = (movementX, movementY) => {\n    const panel = panelRef.current;\n    console.log(\"dragPanel\", panel);\n\n    if (panel !== null) {\n      console.log(\"boundingDrag\", panel.getBoundingClientRect());\n      const {\n        x,\n        y\n      } = panel.getBoundingClientRect();\n      panel.style.left = `${x + movementX}px`;\n      panel.style.top = `${y + movementY}px`;\n    }\n  };\n\n  const handleResize = (direction, movementX, movementY) => {\n    const panel = panelRef.current;\n    console.log(panel);\n    if (!panel) return;\n    console.log(\"boundingResize\");\n    const {\n      width,\n      height,\n      x,\n      y\n    } = panel.getBoundingClientRect();\n\n    const resizeTop = () => {\n      panel.style.height = `${height - movementY}px`;\n      panel.style.top = `${y + movementY}px`;\n    };\n\n    const resizeRight = () => {\n      panel.style.width = `${width - movementX}px`;\n    };\n\n    const resizeBottom = () => {\n      panel.style.height = `${height - movementY}px`;\n    };\n\n    const resizeLeft = () => {\n      panel.style.width = `${width - movementX}px`;\n      panel.style.left = `${x + movementX}px`;\n    };\n\n    switch (direction) {\n      case Direction.TopLeft:\n        resizeTop();\n        resizeLeft();\n        break;\n\n      case Direction.Top:\n        resizeTop();\n        break;\n\n      case Direction.TopRight:\n        resizeTop();\n        resizeRight();\n        break;\n\n      case Direction.Right:\n        resizeRight();\n        break;\n\n      case Direction.BottomRight:\n        resizeBottom();\n        resizeRight();\n        break;\n\n      case Direction.Bottom:\n        resizeBottom();\n        break;\n\n      case Direction.BottomLeft:\n        resizeBottom();\n        resizeLeft();\n        break;\n\n      case Direction.Left:\n        resizeLeft();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    ref: panelRef,\n    children: [/*#__PURE__*/_jsxDEV(Resizer, {\n      onResize: handleResize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(PanelHeader, {\n      handleDrag: handleDrag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Panel, \"+sE+kPbtOrGj5b9nlCfy3WDYqxA=\");\n\n_c = Panel;\nexport default Panel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Panel\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/Panel/Panel.js"],"names":["React","useRef","PanelHeader","Direction","Resizer","Panel","children","panelRef","console","log","handleDrag","movementX","movementY","panel","current","getBoundingClientRect","x","y","style","left","top","handleResize","direction","width","height","resizeTop","resizeRight","resizeBottom","resizeLeft","TopLeft","Top","TopRight","Right","BottomRight","Bottom","BottomLeft","Left"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\nimport PanelHeader from '../PanelHeader'\nimport { Direction } from './constants'\nimport Resizer from './Resizer'\n\n\nconst Panel = ({children}) => {\n\n   const panelRef = useRef(null)\n   console.log(panelRef)\n   \n\n   const handleDrag = (movementX, movementY) => {\n        const panel = panelRef.current\n        console.log(\"dragPanel\", panel)\n        if(panel !== null){\n       \n        console.log(\"boundingDrag\", panel.getBoundingClientRect())\n        const { x, y } = panel.getBoundingClientRect()\n\n        panel.style.left = `${x + movementX}px`\n        panel.style.top = `${y + movementY}px`\n        }\n    }\n    \n    const handleResize = (direction, movementX, movementY)=> {\n   \n\n        const panel = panelRef.current\n        console.log(panel)\n        if(!panel) return\n        console.log(\"boundingResize\")\n        const { width, height, x, y } = panel.getBoundingClientRect()\n\n        const resizeTop = () => {\n            panel.style.height = `${height - movementY}px`\n            panel.style.top = `${y + movementY}px`\n\n        }\n        const resizeRight = () => {\n            panel.style.width = `${width - movementX}px`\n            \n        }\n        const resizeBottom = () => {\n            panel.style.height = `${height - movementY}px`\n            \n        }\n        const resizeLeft = () => {\n            panel.style.width = `${width - movementX}px`\n            panel.style.left = `${x + movementX}px`\n            \n        }\n        switch (direction){\n            case Direction.TopLeft:\n                resizeTop();\n                resizeLeft();\n                break;\n            \n            case Direction.Top:\n                resizeTop();\n                break;\n\n            case Direction.TopRight:\n                resizeTop();\n                resizeRight();\n                break;\n\n            case Direction.Right:\n                resizeRight();\n                break;\n\n            case Direction.BottomRight:\n                resizeBottom();\n                resizeRight();\n                break;\n\n            case Direction.Bottom:\n                resizeBottom();\n                break;\n\n            case Direction.BottomLeft:\n                resizeBottom();\n                resizeLeft();\n                break;\n\n            case Direction.Left:\n                resizeLeft();\n                break;\n\n            default:\n                break;\n\n        }\n    }\n     \n   \n    return(\n       \n        <div className=\"panel\"  ref={panelRef}>\n           \n                <Resizer onResize={handleResize}/> \n                <PanelHeader  handleDrag={handleDrag}/>\n                {children}\n          \n        </div>\n       \n    )\n}\n\nexport default Panel"]},"metadata":{},"sourceType":"module"}