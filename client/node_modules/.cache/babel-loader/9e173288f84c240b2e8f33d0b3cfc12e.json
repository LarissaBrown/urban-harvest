{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/Panel/Panel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport Resizer from './Resizer';\n\nconst Panel = ({\n  children\n}) => {\n  _s();\n\n  const panelRef = useRef();\n\n  const handleDrag = (movementX, movementY) => {\n    const panel = panelRef.current;\n    if (panel !== n) return;\n    const {\n      x,\n      y\n    } = panel.getBoundingClientRect();\n    panel.style.left = `${x + movementX}px`;\n    panel.style.top = `${y + movementY}px`;\n  };\n\n  const handleResize = (direction, movementX, movementY) => {\n    console.log(direction, movementX, movementY);\n    const panel = panelRef.current;\n    if (!panel) return;\n    const {\n      width,\n      height,\n      x,\n      y\n    } = panel.getBoundingClientRect();\n\n    const resizeTop = () => {\n      panel.style.height = `${height - movementY}px`;\n      panel.style.top = `${y + movementY}px`;\n    };\n\n    const resizeRight = () => {\n      panel.style.width = `${width - movementX}px`;\n    };\n\n    const resizeBottom = () => {\n      panel.style.height = `${height - movementY}px`;\n    };\n\n    const resizeLeft = () => {\n      panel.style.width = `${width - movementX}px`;\n      panel.style.left = `${x + movementX}px`;\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    style: {\n      boxSizing: 'border-box'\n    },\n    onDrag: handleDrag,\n    children: [/*#__PURE__*/_jsxDEV(Resizer, {\n      onResize: handleResize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Panel, \"+sE+kPbtOrGj5b9nlCfy3WDYqxA=\");\n\n_c = Panel;\nexport default Panel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Panel\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/Panel/Panel.js"],"names":["React","useRef","Resizer","Panel","children","panelRef","handleDrag","movementX","movementY","panel","current","n","x","y","getBoundingClientRect","style","left","top","handleResize","direction","console","log","width","height","resizeTop","resizeRight","resizeBottom","resizeLeft","boxSizing"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAE3B,QAAMC,QAAQ,GAAGJ,MAAM,EAAvB;;AAEA,QAAMK,UAAU,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAAwB;AACtC,UAAMC,KAAK,GAAGJ,QAAQ,CAACK,OAAvB;AACA,QAAGD,KAAK,KAAKE,CAAb,EAAgB;AAEhB,UAAM;AAAEC,MAAAA,CAAF;AAAKC,MAAAA;AAAL,QAAWJ,KAAK,CAACK,qBAAN,EAAjB;AAEAL,IAAAA,KAAK,CAACM,KAAN,CAAYC,IAAZ,GAAoB,GAAEJ,CAAC,GAAGL,SAAU,IAApC;AACAE,IAAAA,KAAK,CAACM,KAAN,CAAYE,GAAZ,GAAmB,GAAEJ,CAAC,GAAGL,SAAU,IAAnC;AACH,GARF;;AAUC,QAAMU,YAAY,GAAG,CAACC,SAAD,EAAYZ,SAAZ,EAAuBC,SAAvB,KAAoC;AACrDY,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ,EAAuBZ,SAAvB,EAAkCC,SAAlC;AAEA,UAAMC,KAAK,GAAGJ,QAAQ,CAACK,OAAvB;AACA,QAAG,CAACD,KAAJ,EAAW;AAEX,UAAM;AAAEa,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBX,MAAAA,CAAjB;AAAoBC,MAAAA;AAApB,QAA0BJ,KAAK,CAACK,qBAAN,EAAhC;;AAEA,UAAMU,SAAS,GAAG,MAAM;AACpBf,MAAAA,KAAK,CAACM,KAAN,CAAYQ,MAAZ,GAAsB,GAAEA,MAAM,GAAGf,SAAU,IAA3C;AACAC,MAAAA,KAAK,CAACM,KAAN,CAAYE,GAAZ,GAAmB,GAAEJ,CAAC,GAAGL,SAAU,IAAnC;AAEH,KAJD;;AAKA,UAAMiB,WAAW,GAAG,MAAM;AACtBhB,MAAAA,KAAK,CAACM,KAAN,CAAYO,KAAZ,GAAqB,GAAEA,KAAK,GAAGf,SAAU,IAAzC;AAEH,KAHD;;AAIA,UAAMmB,YAAY,GAAG,MAAM;AACvBjB,MAAAA,KAAK,CAACM,KAAN,CAAYQ,MAAZ,GAAsB,GAAEA,MAAM,GAAGf,SAAU,IAA3C;AAEH,KAHD;;AAIA,UAAMmB,UAAU,GAAG,MAAM;AACrBlB,MAAAA,KAAK,CAACM,KAAN,CAAYO,KAAZ,GAAqB,GAAEA,KAAK,GAAGf,SAAU,IAAzC;AACAE,MAAAA,KAAK,CAACM,KAAN,CAAYC,IAAZ,GAAoB,GAAEJ,CAAC,GAAGL,SAAU,IAApC;AAEH,KAJD;AAMD,GA3BH;;AA6BA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAACqB,MAAAA,SAAS,EAAE;AAAZ,KAA9B;AAAyD,IAAA,MAAM,EAAEtB,UAAjE;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEY;AAAnB;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKd,QAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAjDD;;GAAMD,K;;KAAAA,K;AAmDN,eAAeA,KAAf","sourcesContent":["import React, { useRef } from 'react'\nimport Resizer from './Resizer'\n\nconst Panel = ({children}) => {\n\n   const panelRef = useRef()\n\n   const handleDrag = (movementX, movementY)=>{\n        const panel = panelRef.current\n        if(panel !== n) return\n        \n        const { x, y } = panel.getBoundingClientRect()\n\n        panel.style.left = `${x + movementX}px`\n        panel.style.top = `${y + movementY}px`\n    }\n\n    const handleResize = (direction, movementX, movementY)=> {\n        console.log(direction, movementX, movementY)\n\n        const panel = panelRef.current\n        if(!panel) return\n\n        const { width, height, x, y } = panel.getBoundingClientRect()\n\n        const resizeTop = () => {\n            panel.style.height = `${height - movementY}px`\n            panel.style.top = `${y + movementY}px`\n\n        }\n        const resizeRight = () => {\n            panel.style.width = `${width - movementX}px`\n            \n        }\n        const resizeBottom = () => {\n            panel.style.height = `${height - movementY}px`\n            \n        }\n        const resizeLeft = () => {\n            panel.style.width = `${width - movementX}px`\n            panel.style.left = `${x + movementX}px`\n            \n        }\n\n      }\n   \n    return(\n        <div className=\"panel\" style={{boxSizing: 'border-box'}} onDrag={handleDrag}>\n            <Resizer onResize={handleResize}/>\n            {children}\n        </div>\n    )\n}\n\nexport default Panel"]},"metadata":{},"sourceType":"module"}