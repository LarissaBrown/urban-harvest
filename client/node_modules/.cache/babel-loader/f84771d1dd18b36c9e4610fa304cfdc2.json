{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, UIEventHandler } from 'react';\nimport Unsplash, { toJson } from \"unsplash-js\";\nimport { v4 } from 'uuid';\nimport DragMove from \"./DragMove\"; //import Access_Key from './.env'\n\nexport default function FarmerHarvestPhotos(props) {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const [translate, setTranslate] = useState({\n    x: 0,\n    y: 0\n  });\n  const {\n    isClicked\n  } = props;\n  const unsplash = new Unsplash({\n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" //...other fetch options\n    // `fetch` options to be sent with every request\n    //headers: { 'X-Custom-Header': 'foo' },\n\n  }); //syntax for searching photos\n  //search.photos(keyword, page, per_page, filters)\n\n  const searchPhotos = async event => {\n    event.preventDefault();\n    unsplash.search.photos(query).then(toJson).then(json => {\n      setPics(json.results);\n    });\n  }; //searchPhotos(unsplash)\n\n\n  const handleDragMove = e => {\n    setTranslate({\n      x: translate.x + e.movementX,\n      y: translate.y + e.movementY\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: isClicked ? {\n      visibility: \"visible\",\n      position: 'absolute'\n    } : {\n      visibility: \"hidden\",\n      position: 'absolute'\n    },\n    children: /*#__PURE__*/_jsxDEV(DragMove, {\n      onDragMove: handleDragMove,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          transform: `translateX(${translate.x}px) translateY(${translate.y}px)`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"unsplash-App\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"unsplash-title\",\n            children: \"Harvest Image Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"unsplash-form\",\n            onSubmit: searchPhotos,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"unsplash-label\",\n              htmlFor: \"query\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"query\",\n              className: \"unsplash-input\",\n              placeholder: `Try \"carrots\" or \"apples\"`,\n              value: query,\n              onChange: e => setQuery(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"unsplash-button\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-list\",\n            children: pics.map(pic => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"card--image\",\n                alt: pic.alt_description,\n                src: pic.urls.full,\n                width: \"50%\",\n                height: \"50%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, v4(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FarmerHarvestPhotos, \"7aecopogLzzXQpstBRrw2Wftc+k=\");\n\n_c = FarmerHarvestPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerHarvestPhotos\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js"],"names":["React","useState","UIEventHandler","Unsplash","toJson","v4","DragMove","FarmerHarvestPhotos","props","query","setQuery","pics","setPics","translate","setTranslate","x","y","isClicked","unsplash","accessKey","searchPhotos","event","preventDefault","search","photos","then","json","results","handleDragMove","e","movementX","movementY","visibility","position","transform","target","value","map","pic","alt_description","urls","full"],"mappings":"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","sourcesContent":["import React, { useState, UIEventHandler }from 'react'\nimport  Unsplash,{ toJson } from \"unsplash-js\"\nimport {v4} from 'uuid'\nimport DragMove from \"./DragMove\"\n\n\n//import Access_Key from './.env'\n\n\n\nexport default function FarmerHarvestPhotos(props) {\n    const [query, setQuery] = useState(\"\")\n    const [ pics, setPics ] = useState([])\n    const [translate, setTranslate] = useState({\n        x: 0,\n        y: 0\n      });\n    const {isClicked} = props\n    const unsplash = new Unsplash({\n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" \n    //...other fetch options\n     // `fetch` options to be sent with every request\n  //headers: { 'X-Custom-Header': 'foo' },\n    });\n\n  \n    //syntax for searching photos\n    //search.photos(keyword, page, per_page, filters)\n\n    const searchPhotos = async(event) => {\n        event.preventDefault()\n\n        unsplash.search\n        .photos(query)\n        .then((toJson))\n        .then((json) => {\n            setPics(json.results)\n        })\n    };\n    //searchPhotos(unsplash)\n\n   \n    \n      const handleDragMove = (e) => {\n        setTranslate({\n          x: translate.x + e.movementX,\n          y: translate.y + e.movementY\n        });\n      };\n    \n    \n    return(\n        <div style={isClicked? {visibility: \"visible\", position: 'absolute'} : {visibility: \"hidden\", position: 'absolute'}}>\n   <DragMove onDragMove={handleDragMove}>\n    <div style={{\n              transform: `translateX(${translate.x}px) translateY(${translate.y}px)`,\n              \n            }} \n           >\n        <div className='unsplash-App'>\n            <h1 className=\"unsplash-title\">Harvest Image Search</h1>\n\n        <form className=\"unsplash-form\" onSubmit={searchPhotos}> \n            <label className=\"unsplash-label\" htmlFor=\"query\"> \n            {\" \"}\n            </label>\n            <input\n            type=\"text\"\n            name=\"query\"\n            className=\"unsplash-input\"\n            placeholder={`Try \"carrots\" or \"apples\"`}\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            />\n            <button type=\"submit\" className=\"unsplash-button\">\n            <p>Search</p>\n            </button>\n        </form>\n        <div className=\"card-list\" >\n          {\n          pics.map((pic) => \n            <div key={v4()} className=\"card\">\n                <img\n                    className=\"card--image\"\n                    alt={pic.alt_description}\n                    src={pic.urls.full}\n                    width=\"50%\"\n                    height=\"50%\"\n                ></img>\n            </div>)\n          }\n        </div>\n        </div>\n    </div>\n   </DragMove>  \n   </div>    \n   \n  );\n}\n   "]},"metadata":{},"sourceType":"module"}