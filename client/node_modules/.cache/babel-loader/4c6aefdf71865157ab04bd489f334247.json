{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/Panel/Panel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport PanelHeader from '../PanelHeader';\nimport { Direction } from './constants';\nimport Resizer from './Resizer';\nimport { useContext } from './context/HarvestProvider.js';\n\nconst Panel = ({\n  children\n}) => {\n  _s();\n\n  const {\n    isClicked\n  } = useContext(HarvestContext);\n  const panelRef = useRef(null);\n\n  const handleDrag = (movementX, movementY) => {\n    const panel = panelRef.current;\n    if (!panel) return;\n    const {\n      x,\n      y\n    } = panel.getBoundingClientRect();\n    panel.style.left = `${x + movementX}px`;\n    panel.style.top = `${y + movementY}px`;\n  };\n\n  const handleResize = (direction, movementX, movementY) => {\n    console.log(direction, movementX, movementY);\n    const panel = panelRef.current;\n    if (!panel) return;\n    const {\n      width,\n      height,\n      x,\n      y\n    } = panel.getBoundingClientRect();\n\n    const resizeTop = () => {\n      panel.style.height = `${height - movementY}px`;\n      panel.style.top = `${y + movementY}px`;\n    };\n\n    const resizeRight = () => {\n      panel.style.width = `${width - movementX}px`;\n    };\n\n    const resizeBottom = () => {\n      panel.style.height = `${height - movementY}px`;\n    };\n\n    const resizeLeft = () => {\n      panel.style.width = `${width - movementX}px`;\n      panel.style.left = `${x + movementX}px`;\n    };\n\n    switch (direction) {\n      case Direction.TopLeft:\n        resizeTop();\n        resizeLeft();\n        break;\n\n      case Direction.Top:\n        resizeTop();\n        break;\n\n      case Direction.TopRight:\n        resizeTop();\n        resizeRight();\n        break;\n\n      case Direction.Right:\n        resizeRight();\n        break;\n\n      case Direction.BottomRight:\n        resizeBottom();\n        resizeRight();\n        break;\n\n      case Direction.Bottom:\n        resizeBottom();\n        break;\n\n      case Direction.BottomLeft:\n        resizeBottom();\n        resizeLeft();\n        break;\n\n      case Direction.Left:\n        resizeLeft();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    ref: panelRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel_container\",\n      style: isClicked ? {\n        visibility: \"visible\",\n        position: 'absolute'\n      } : {\n        visibility: \"hidden\",\n        position: 'absolute'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Resizer, {\n        onResize: handleResize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PanelHeader, {\n        handleDrag: handleDrag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel_content\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Panel, \"Q2wKXJTqc6W0g84/C4yDZPwWw1Y=\");\n\n_c = Panel;\nexport default Panel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Panel\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/Panel/Panel.js"],"names":["React","useRef","PanelHeader","Direction","Resizer","useContext","Panel","children","isClicked","HarvestContext","panelRef","handleDrag","movementX","movementY","panel","current","x","y","getBoundingClientRect","style","left","top","handleResize","direction","console","log","width","height","resizeTop","resizeRight","resizeBottom","resizeLeft","TopLeft","Top","TopRight","Right","BottomRight","Bottom","BottomLeft","Left","visibility","position"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\nimport PanelHeader from '../PanelHeader'\nimport { Direction } from './constants'\nimport Resizer from './Resizer'\nimport {useContext} from './context/HarvestProvider.js'\n\n\n\nconst Panel = ({children}) => {\n   const {isClicked} = useContext(HarvestContext)\n   const panelRef = useRef(null)\n  \n   const handleDrag = (movementX, movementY) => {\n        const panel = panelRef.current\n       \n        if(!panel)  return\n       \n       \n        const { x, y } = panel.getBoundingClientRect()\n           \n        panel.style.left = `${x + movementX}px`\n        panel.style.top = `${y + movementY}px`\n        \n    }\n    \n    const handleResize = (direction, movementX, movementY)=> {\n        console.log(direction, movementX, movementY)\n\n        const panel = panelRef.current\n        \n        if(!panel) return\n      \n        const { width, height, x, y } = panel.getBoundingClientRect()\n\n        const resizeTop = () => {\n            panel.style.height = `${height - movementY}px`\n            panel.style.top = `${y + movementY}px`\n\n        }\n        const resizeRight = () => {\n            panel.style.width = `${width - movementX}px`\n            \n        }\n        const resizeBottom = () => {\n            panel.style.height = `${height - movementY}px`\n            \n        }\n        const resizeLeft = () => {\n            panel.style.width = `${width - movementX}px`\n            panel.style.left = `${x + movementX}px`\n            \n        }\n        switch (direction){\n            case Direction.TopLeft:\n                resizeTop();\n                resizeLeft();\n                break;\n            \n            case Direction.Top:\n                resizeTop();\n                break;\n\n            case Direction.TopRight:\n                resizeTop();\n                resizeRight();\n                break;\n\n            case Direction.Right:\n                resizeRight();\n                break;\n\n            case Direction.BottomRight:\n                resizeBottom();\n                resizeRight();\n                break;\n\n            case Direction.Bottom:\n                resizeBottom();\n                break;\n\n            case Direction.BottomLeft:\n                resizeBottom();\n                resizeLeft();\n                break;\n\n            case Direction.Left:\n                resizeLeft();\n                break;\n\n            default:\n                break;\n\n        }\n    }\n     \n   \n    return(\n       \n        <div className=\"panel\"  ref={panelRef}>\n            <div className=\"panel_container\" \n                  style={isClicked \n                    ? \n                  {visibility: \"visible\", position: 'absolute'} \n                    :\n                  {visibility: \"hidden\", position: 'absolute'}}\n            >\n                <Resizer onResize={handleResize}/> \n                <PanelHeader  handleDrag={handleDrag}/>\n                <div className=\"panel_content\">\n                {children}\n                </div>\n            </div>\n        </div>\n       \n    )\n}\n\nexport default Panel"]},"metadata":{},"sourceType":"module"}