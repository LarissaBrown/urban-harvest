{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport Unsplash, { toJson } from \"unsplash-js\";\nimport { v4 } from 'uuid';\nimport Panel from './Panel/Panel';\nimport { HarvestContext } from '../context/HarvestProvider';\nimport Resizer from \"./Panel/Resizer\";\nexport default function FarmerHarvestPhotos(props) {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const {\n    isClicked,\n    setIsClicked\n  } = useContext(HarvestContext);\n  const [mouseDown, setMouseDown] = useState(false);\n  const unsplash = new Unsplash({\n    //import Access_Key from './.env' \n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" //...other fetch options\n    // `fetch` options to be sent with every request\n    //headers: { 'X-Custom-Header': 'foo' },\n\n  }); //syntax for searching photos\n  //search.photos(keyword, page, per_page, filters)\n\n  const searchPhotos = async event => {\n    event.preventDefault();\n    unsplash.search.photos(query).then(toJson).then(json => {\n      setPics(json.results);\n    });\n  }; //searchPhotos(unsplash)\n\n\n  const panelRef = useRef(null);\n\n  const handleDrag = (movementX, movementY) => {\n    const panel = panelRef.current;\n    if (!panel) return;\n    const {\n      x,\n      y\n    } = panel.getBoundingClientRect();\n    panel.style.left = `${x + movementX}px`;\n    panel.style.top = `${y + movementY}px`;\n  };\n\n  const handleMouseDown = () => setMouseDown(true);\n\n  useEffect(() => {\n    const handleMouseUp = () => setMouseDown(false);\n\n    window.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      window.addEventListener('mouseup', handleMouseUp);\n    };\n  }, []);\n  useEffect(() => {\n    const handleMouseMove = e => handleDrag(e.movementX, e.movementY);\n\n    if (mouseDown) {\n      window.addEventListener('mousemove', handleMouseMove);\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [mouseDown, handleDrag]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unsplash-App\",\n    style: isClicked ? {\n      visibility: \"visible\"\n    } : {\n      visibility: \"hidden\"\n    },\n    style: {\n      color: \"black\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Panel, {\n      id: \"panel-search-App\",\n      ondrag: handleDrag,\n      children: [/*#__PURE__*/_jsxDEV(Resizer, {\n        onMouseDown: handleMouseDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"unsplash-title\",\n        children: \"Harvest Image Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"unsplash-form\",\n        onSubmit: searchPhotos,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"unsplash-label\",\n          htmlFor: \"query\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"query\",\n          className: \"unsplash-input\",\n          placeholder: `Try \"carrots\" or \"apples\"`,\n          value: query,\n          onChange: e => setQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"unsplash-button\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-list\",\n        children: pics.map(pic => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"card--image\",\n            alt: pic.alt_description,\n            src: pic.urls.full,\n            width: \"50%\",\n            height: \"50%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)\n        }, v4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FarmerHarvestPhotos, \"SEwwNTGdeUMsWrb+d8rpg+KCr7I=\");\n\n_c = FarmerHarvestPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerHarvestPhotos\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js"],"names":["React","useState","useEffect","useContext","useRef","Unsplash","toJson","v4","Panel","HarvestContext","Resizer","FarmerHarvestPhotos","props","query","setQuery","pics","setPics","isClicked","setIsClicked","mouseDown","setMouseDown","unsplash","accessKey","searchPhotos","event","preventDefault","search","photos","then","json","results","panelRef","handleDrag","movementX","movementY","panel","current","x","y","getBoundingClientRect","style","left","top","handleMouseDown","handleMouseUp","window","addEventListener","handleMouseMove","e","removeEventListener","visibility","color","target","value","map","pic","alt_description","urls","full"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef}from 'react'\nimport  Unsplash,{ toJson } from \"unsplash-js\"\nimport {v4} from 'uuid'\nimport Panel from './Panel/Panel'\nimport {HarvestContext} from '../context/HarvestProvider'\nimport Resizer from \"./Panel/Resizer\"\n\n\n\nexport default function FarmerHarvestPhotos(props) {\n    const [query, setQuery] = useState(\"\")\n    const [ pics, setPics ] = useState([])\n    const {isClicked, setIsClicked} = useContext(HarvestContext)\n    const [ mouseDown, setMouseDown ] = useState(false)\n\n    const unsplash = new Unsplash({\n     //import Access_Key from './.env' \n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" \n    //...other fetch options\n     // `fetch` options to be sent with every request\n    //headers: { 'X-Custom-Header': 'foo' },\n    });\n\n  \n    //syntax for searching photos\n    //search.photos(keyword, page, per_page, filters)\n\n    const searchPhotos = async(event) => {\n        event.preventDefault()\n\n        unsplash.search\n        .photos(query)\n        .then((toJson))\n        .then((json) => {\n            setPics(json.results)\n        })\n    };\n\n\n    //searchPhotos(unsplash)\n  \n\n    const panelRef = useRef(null)\n\n    const handleDrag = (movementX, movementY) => {\n        const panel = panelRef.current\n       \n        if(!panel)  return\n       \n       \n        const { x, y } = panel.getBoundingClientRect()\n           \n        panel.style.left = `${x + movementX}px`\n        panel.style.top = `${y + movementY}px`\n        \n    }\n  \n    const handleMouseDown = () => setMouseDown(true)\n\n   \n      useEffect(() => {\n        const handleMouseUp = () => setMouseDown(false)\n        window.addEventListener('mouseup', handleMouseUp)\n        return () => {\n        window.addEventListener('mouseup', handleMouseUp)\n        }\n      }, [])\n    \n      useEffect(() => {\n        const handleMouseMove = (e) => handleDrag(e.movementX, e.movementY)\n  \n        if(mouseDown) {\n          window.addEventListener('mousemove', handleMouseMove)\n        }\n        return () => {\n          window.removeEventListener('mousemove',  handleMouseMove)\n        }\n      }, [mouseDown, handleDrag])\n     \n\n    \n    return(\n      <div    \n      className='unsplash-App'\n      style={isClicked \n        ? \n      {visibility: \"visible\"} \n        :\n      {visibility: \"hidden\"}}\n     \n      style={{color: \"black\"}}>\n        <Panel id='panel-search-App'ondrag={handleDrag}> \n          <Resizer onMouseDown={handleMouseDown}/>\n            <h1 className=\"unsplash-title\">Harvest Image Search</h1>\n\n        <form className=\"unsplash-form\" onSubmit={searchPhotos}> \n            <label className=\"unsplash-label\" htmlFor=\"query\"> \n            {\" \"}\n            </label>\n            <input\n            type=\"text\"\n            name=\"query\"\n            className=\"unsplash-input\"\n            placeholder={`Try \"carrots\" or \"apples\"`}\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            />\n            <button type=\"submit\" className=\"unsplash-button\">\n            <p>Search</p>\n            </button>\n        </form>\n        <div className=\"card-list\" >\n          {\n          pics.map((pic) => \n            <div key={v4()} className=\"card\">\n                <img\n                    className=\"card--image\"\n                    alt={pic.alt_description}\n                    src={pic.urls.full}\n                    width=\"50%\"\n                    height=\"50%\"\n                ></img>\n            </div>)\n          }\n        </div>\n        \n     \n\n      </Panel>\n \n  </div> \n   \n  );\n}\n   "]},"metadata":{},"sourceType":"module"}