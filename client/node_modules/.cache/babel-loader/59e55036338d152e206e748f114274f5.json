{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Unsplash, { toJson } from \"unsplash-js\";\nimport { v4 } from 'uuid'; //import DragMove from \"./DragMove\"\n//import Resizer from \"./Panel/Resizer\"\n//import Access_Key from './.env'\n\nexport default function FarmerHarvestPhotos(props) {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [pics, setPics] = useState([]);\n  const {\n    isClicked\n  } = props;\n  const unsplash = new Unsplash({\n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" //...other fetch options\n    // `fetch` options to be sent with every request\n    //headers: { 'X-Custom-Header': 'foo' },\n\n  }); //syntax for searching photos\n  //search.photos(keyword, page, per_page, filters)\n\n  const searchPhotos = async event => {\n    event.preventDefault();\n    unsplash.search.photos(query).then(toJson).then(json => {\n      setPics(json.results);\n    });\n  }; //searchPhotos(unsplash)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseDown: handleMouseDown,\n      className: \"panel_container\",\n      style: isClicked ? {\n        visibility: \"visible\",\n        position: 'absolute'\n      } : {\n        visibility: \"hidden\",\n        position: 'absolute'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unsplash-App\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"unsplash-title\",\n          children: \"Harvest Image Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"unsplash-form\",\n          onSubmit: searchPhotos,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"unsplash-label\",\n            htmlFor: \"query\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"query\",\n            className: \"unsplash-input\",\n            placeholder: `Try \"carrots\" or \"apples\"`,\n            value: query,\n            onChange: e => setQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"unsplash-button\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-list\",\n          children: pics.map(pic => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"card--image\",\n              alt: pic.alt_description,\n              src: pic.urls.full,\n              width: \"50%\",\n              height: \"50%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, v4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(FarmerHarvestPhotos, \"3A59LxDhw+HpdF/9hHUDEa0JEwY=\");\n\n_c = FarmerHarvestPhotos;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmerHarvestPhotos\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/FarmerHarvestPhotos.js"],"names":["React","useState","useEffect","useRef","Unsplash","toJson","v4","FarmerHarvestPhotos","props","query","setQuery","pics","setPics","isClicked","unsplash","accessKey","searchPhotos","event","preventDefault","search","photos","then","json","results","handleMouseDown","visibility","position","e","target","value","map","pic","alt_description","urls","full"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef}from 'react'\nimport  Unsplash,{ toJson } from \"unsplash-js\"\nimport {v4} from 'uuid'\n\n//import DragMove from \"./DragMove\"\n//import Resizer from \"./Panel/Resizer\"\n//import Access_Key from './.env'\n\n\nexport default function FarmerHarvestPhotos(props) {\n    const [query, setQuery] = useState(\"\")\n    const [ pics, setPics ] = useState([])\n   \n    const {isClicked} = props\n    \n\n\n    const unsplash = new Unsplash({\n    accessKey: \"7LtZFhlWzGy0OPYYT0GVrfrXXt7yrVIsDzsPTvl93lk\" \n    //...other fetch options\n     // `fetch` options to be sent with every request\n    //headers: { 'X-Custom-Header': 'foo' },\n    });\n\n  \n    //syntax for searching photos\n    //search.photos(keyword, page, per_page, filters)\n\n    const searchPhotos = async(event) => {\n        event.preventDefault()\n\n        unsplash.search\n        .photos(query)\n        .then((toJson))\n        .then((json) => {\n            setPics(json.results)\n        })\n    };\n\n\n    //searchPhotos(unsplash)\n    \n    \n    return(\n      <>\n  \n    <div onMouseDown={handleMouseDown} className=\"panel_container\" \n         style={isClicked\n         ? \n         {visibility: \"visible\", position: 'absolute'} \n         :\n          {visibility: \"hidden\", position: 'absolute'}}>\n           \n        <div className='unsplash-App'>\n            <h1 className=\"unsplash-title\">Harvest Image Search</h1>\n\n        <form className=\"unsplash-form\" onSubmit={searchPhotos}> \n            <label className=\"unsplash-label\" htmlFor=\"query\"> \n            {\" \"}\n            </label>\n            <input\n            type=\"text\"\n            name=\"query\"\n            className=\"unsplash-input\"\n            placeholder={`Try \"carrots\" or \"apples\"`}\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            />\n            <button type=\"submit\" className=\"unsplash-button\">\n            <p>Search</p>\n            </button>\n        </form>\n        <div className=\"card-list\" >\n          {\n          pics.map((pic) => \n            <div key={v4()} className=\"card\">\n                <img\n                    className=\"card--image\"\n                    alt={pic.alt_description}\n                    src={pic.urls.full}\n                    width=\"50%\"\n                    height=\"50%\"\n                ></img>\n            </div>)\n          }\n        </div>\n        </div>\n </div>\n \n  </> \n   \n  );\n}\n   "]},"metadata":{},"sourceType":"module"}