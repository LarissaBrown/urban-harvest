{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/HarvestPublishing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { UserContext } from '../context/UserProvider';\nimport { HarvestContext } from '../context/HarvestProvider';\nimport Grid from '@material-ui/core/Grid';\nexport default function HarvestPublishing(props) {\n  _s();\n\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    addHarvest\n  } = useContext(HarvestContext);\n  const [inputs, setInputs] = useState(user);\n  const {\n    hideform,\n    setHideform\n  } = props;\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(prevInputs => ({ ...prevInputs,\n      [name]: value\n    }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    addHarvest(inputs);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: \"publishing-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"message\",\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleChange,\n        value: \"\",\n        className: \"harvest-title\",\n        placeholder: \"title\",\n        name: \"title\",\n        id: \"title\",\n        rows: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: \"\",\n        placeholder: \"image\",\n        name: \"image\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HarvestPublishing, \"9WUUrLen05jRwcbrvN8hhSjmfdo=\");\n\n_c = HarvestPublishing;\n\nvar _c;\n\n$RefreshReg$(_c, \"HarvestPublishing\");","map":{"version":3,"sources":["/Users/larissabrown/Desktop/Development/module-6/urban-harvest/client/src/components/HarvestPublishing.js"],"names":["React","useState","useContext","UserContext","HarvestContext","Grid","HarvestPublishing","props","user","addHarvest","inputs","setInputs","hideform","setHideform","handleChange","e","name","value","target","prevInputs","handleSubmit","preventDefault"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAAUC,WAAV,QAA6B,yBAA7B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAGA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAG7C,QAAM;AAAEC,IAAAA;AAAF,MAAWN,UAAU,CAACC,WAAD,CAA3B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAiBP,UAAU,CAACE,cAAD,CAAjC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAACO,IAAD,CAApC;AACA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BN,KAAlC;;AAGA,WAASO,YAAT,CAAsBC,CAAtB,EAAwB;AACpB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAP,IAAAA,SAAS,CAACQ,UAAU,KAAK,EACrB,GAAGA,UADkB;AAErB,OAACH,IAAD,GAAQC;AAFa,KAAL,CAAX,CAAT;AAIH;;AAED,WAASG,YAAT,CAAsBL,CAAtB,EAAwB;AACpBA,IAAAA,CAAC,CAACM,cAAF;AACCZ,IAAAA,UAAU,CAACC,MAAD,CAAV;AAEJ;;AAID,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEU,YAAhB;AAAA,8BACR;AAAO,QAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,eAER;AACgB,QAAA,IAAI,EAAC,MADrB;AAEgB,QAAA,QAAQ,EAAEN,YAF1B;AAGgB,QAAA,KAAK,EAAC,EAHtB;AAIgB,QAAA,SAAS,EAAC,eAJ1B;AAKgB,QAAA,WAAW,EAAC,OAL5B;AAMgB,QAAA,IAAI,EAAC,OANrB;AAOgB,QAAA,EAAE,EAAC,OAPnB;AAQgB,QAAA,IAAI,EAAC;AARrB;AAAA;AAAA;AAAA;AAAA,cAFQ,eAYI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAC,EAFV;AAGI,QAAA,WAAW,EAAC,OAHhB;AAII,QAAA,IAAI,EAAC,OAJT;AAKI,QAAA,QAAQ,EAAEA;AALd;AAAA;AAAA;AAAA;AAAA,cAZJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GAlDuBR,iB;;KAAAA,iB","sourcesContent":["import React, { useState, useContext } from 'react'\nimport  { UserContext } from '../context/UserProvider'\nimport { HarvestContext } from '../context/HarvestProvider'\nimport Grid from '@material-ui/core/Grid'\n\n\nexport default function HarvestPublishing(props) {\n  \n\n    const { user } = useContext(UserContext)\n    const { addHarvest } = useContext(HarvestContext)\n    const [inputs, setInputs] = useState(user)\n    const { hideform, setHideform } = props\n\n \n    function handleChange(e){\n        const { name, value } = e.target\n        setInputs(prevInputs => ({\n            ...prevInputs, \n            [name]: value\n       }))\n    }\n\n    function handleSubmit(e){\n        e.preventDefault()\n         addHarvest(inputs)\n         \n    }\n\n   \n\n    return (\n        <Grid className='publishing-container'>\n            <form onSubmit={handleSubmit} >\n\t\t\t\t<label for=\"message\">Message</label>\n\t\t\t\t<input  \n                    type=\"text\" \n                    onChange={handleChange} \n                    value=\"\"\n                    className=\"harvest-title\" \n                    placeholder=\"title\"\n                    name=\"title\" \n                    id=\"title\" \n                    rows=\"5\">\n                </input>\n                <input\n                    type=\"text\"\n                    value=\"\"\n                    placeholder=\"image\"\n                    name=\"image\"\n                    onChange={handleChange}\n                    />\n                <button>Publish</button>\n            </form>\n        </Grid >\n    )\n}"]},"metadata":{},"sourceType":"module"}